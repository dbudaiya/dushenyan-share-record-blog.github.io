<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pnpm</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/08/02/pnpm/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/08/02/pnpm/</url>
      
        <content type="html"><![CDATA[<p>待定….</p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>apipost</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/08/02/apipost/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/08/02/apipost/</url>
      
        <content type="html"><![CDATA[<p>待定….</p>]]></content>
      
      
      <categories>
          
          <category> 效率工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/Git/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/Git/</url>
      
        <content type="html"><![CDATA[<h2 id="GIT是什么"><a href="#GIT是什么" class="headerlink" title="GIT是什么"></a>GIT是什么</h2><hr><p>自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。它的速度飞快，极其适合管理大项目 。<br />Git 可以在 windows、Mac、Linux 全平台系统使用。<br><a name="ffysq"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a>官网指引</h2><hr><p>中文官网： <a href="https://gitforwindows.org/">https://gitforwindows.org/</a><br />下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><a name="w6Vtr"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>图像化软件<br><a name="UNukc"></a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><hr><p>配置文件为 ~&#x2F;.gitconfig ，执行任何 Git 配置命令后文件将自动创建。<br />第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;2645472474@qq.com&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;dushenyan&quot;</span></span><br></pre></td></tr></table></figure><p><a name="retlo"></a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><hr><p>工作流</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件</span></span><br><span class="line">touch a.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化新仓库 </span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆代码 </span></span><br><span class="line">git clone https://gitee.com/houdunwang/hdcms.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆指定分支 </span></span><br><span class="line">git clone <span class="literal">-b</span> dev git@gitee.com:houdunwang/hdcms.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交单个文件 </span></span><br><span class="line">git add index.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交所有文件</span></span><br><span class="line">git add <span class="literal">-A</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用通配符提交 </span></span><br><span class="line">git add *.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交到仓库中 </span></span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">&#x27;提示信息&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交已经跟踪过的文件，不需要执行</span></span><br><span class="line"></span><br><span class="line">add git commit <span class="literal">-a</span> <span class="literal">-m</span> <span class="string">&#x27;提交信息&#x27;</span></span><br><span class="line"><span class="comment"># 删除版本库与项目目录中的文件 </span></span><br><span class="line">git <span class="built_in">rm</span> index.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只删除版本库中文件但保存项目目录中文件</span></span><br><span class="line">git <span class="built_in">rm</span> <span class="literal">--cached</span> index.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有删除错了的文件hd.js 可输入下列命令</span></span><br><span class="line">git checkout hd.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改最后一次提交 </span></span><br><span class="line">git commit <span class="literal">--amend</span></span><br></pre></td></tr></table></figure><p><a name="UmcR5"></a></p><h2 id="分支流程"><a href="#分支流程" class="headerlink" title="分支流程"></a>分支流程</h2><hr><p>大部分情况下不会直接在 master 分支工作，我们应该保护这个分支是最终开发完成代码健康可交付运行的。<br />所以功能和缺陷(bug)修复都会新建分支完成，除了这个概念外与基本流程使用是一样的。</p><ol><li><p><strong>新建支付功能开发分支</strong></p><blockquote><p>git branch pay</p></blockquote></li><li><p><strong>切换到新分支开始开发，这里的工作内容与上面的基础流程是一样的</strong></p><blockquote><p>git checkout pay</p></blockquote></li><li><p>**开发完成执行提交 **</p><blockquote><p>git commit -m ‘H5 支付功能’</p></blockquote></li><li><p><strong>合并分支到 master</strong></p><blockquote><p>切换到master分支<br />git checkout master</p></blockquote></li></ol><p>合并pay分支的代码<br />git merge pay</p><ol start="5"><li><strong>提交代码到 master 远程分支</strong><blockquote><p>git push</p></blockquote></li></ol><p><a name="xs4Qg"></a></p><h2 id="基本管理"><a href="#基本管理" class="headerlink" title="基本管理"></a>基本管理</h2><hr><p><a name="wNQt3"></a></p><h3 id="工作区管理"><a href="#工作区管理" class="headerlink" title="工作区管理"></a>工作区管理</h3><p>git clean 命令用来从工作目录中删除所有没有跟踪（tracked）过的文件</p><ol><li>git clean -n是一次 clean 的演习, 告诉你哪些文件会被删除</li><li>git clean -f删除当前目录下没有 tracked 过的文件，不会删除.gitignore 指定的文件</li><li>git clean -df删除当前目录下没有被 tracked 过的文件和文件夹<br><a name="lHYYL"></a></li></ol><h3 id="暂存区管理"><a href="#暂存区管理" class="headerlink" title="暂存区管理"></a>暂存区管理</h3><ol><li>提交所有修改和新增的文件 git add .</li><li>只提交修改文件不提交新文件 git add -u</li><li>放弃没有提交的所有修改 git checkout .</li><li>放弃指定文件的修改 git checkout hd.js</li><li>查看暂存区文件列表 git ls-files -s</li><li>查看暂存区文件内容 git cat-file -p 6e9a94<br><a name="rcBqJ"></a></li></ol><h3 id="版本库管理"><a href="#版本库管理" class="headerlink" title="版本库管理"></a>版本库管理</h3><p>使用 reset 恢复到历史提交点，重置暂存区与工作目录的内容。</p><ol><li>清空工作区和暂存区的改动 git reset –hard</li><li>恢复前三个版本 git reset –hard HEAD^^^</li><li>保留工作区的内容，把文件差异放进暂存区 git reset –soft</li><li>恢复到指定提交版本（先通过 git log 查看版本号) git reset –hard b7b73147ca8d6fc20e451d7b36<br><a name="ms94p"></a></li></ol><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><p>分支用于为项目增加新功能或修复 Bug 时使用。</p><ol><li><p>创建分支 git branch dev</p></li><li><p>查看分支 git branch</p></li><li><p>切换分支 git checkout dev</p></li><li><p>创建并切换分支 git checkout -b feature&#x2F;bbs</p></li><li><p>合并 dev 分支到 master</p><blockquote><p>git checkout master<br />git merge dev</p></blockquote></li><li><p>删除分支 git branch -d dev</p></li><li><p>删除没有合并的分支git branch -D dev</p></li><li><p>删除远程分支 git push origin :dev</p></li><li><p>查看未合并的分支(切换到 master) git branch –no-merged</p></li><li><p>查看已经合并的分支(切换到 master) git branch –merged<br><a name="n1KDP"></a></p></li></ol><h3 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h3><p>Git 也可以对某一时间点上的版本打上标签 ，用于发布软件版本如 v1.0</p><ol><li>添加标签 git tag v1.0</li><li>列出标签 git tag</li><li>推送标签 git push –tags</li><li>删除标签 git tag -d v1.0.1</li><li>删除远程标签 git push origin :v1.0.1<br><a name="WW6hq"></a></li></ol><h3 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h3><ol><li>查看日志 git log</li><li>查看最近 2 次提交日志并显示文件差异 git log -p -2</li><li>显示已修改的文件清单 git log –name-only</li><li>显示新增、修改、删除的文件清单 git log –name-status</li><li>一行显示并只显示 SHA-1 的前几个字符 git log –oneline<br><a name="Iiri4"></a></li></ol><h2 id="效率提升"><a href="#效率提升" class="headerlink" title="效率提升"></a>效率提升</h2><hr><p><a name="roYPX"></a></p><h3 id="定义别名"><a href="#定义别名" class="headerlink" title="定义别名"></a>定义别名</h3><p>通过创建命令别名可以减少命令输入量，有几种方式进行设置</p><ol><li><strong>配置文件定义</strong></li></ol><p>修改配置文件 ~&#x2F;.gitconfig 并添加以下命令别名配置段</p><blockquote><p>[alias]<br />a &#x3D; add .<br />c &#x3D; commit<br />s &#x3D; status<br />l &#x3D; log<br />b &#x3D; branch</p></blockquote><p>现在可以使用 git a 实现 git add . 一样的效果了。</p><ol start="2"><li><strong>系统配置定义</strong></li></ol><p>window 用户可以修改~&#x2F;.bashrc 或 ~&#x2F;.bash_profile文件。<br />mac&#x2F;linux 修改 ~&#x2F;.zshrc 文件中定义常用的别名指令，需要首先安装 zsh 命令行扩展</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alias gs=<span class="string">&quot;git status&quot;</span></span><br><span class="line">alias gc=<span class="string">&quot;git commit -m &quot;</span></span><br><span class="line">alias gl=<span class="string">&quot;git log --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit  &quot;</span></span><br><span class="line">alias gb=<span class="string">&quot;git branch&quot;</span></span><br><span class="line">alias ga=<span class="string">&quot;git add .&quot;</span></span><br><span class="line">alias go=<span class="string">&quot;git checkout&quot;</span></span><br></pre></td></tr></table></figure><p>命令行直接使用 gs 即可以实现 git status 一样的效果了。<br />window 系统需要使用 git for window 中的 Git Base 软件<br><a name="a65WB"></a></p><h3 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h3><p>.gitignore 用于定义忽略提交的文件</p><ul><li>所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。</li><li>匹配模式最后跟反斜杠（&#x2F;）说明要忽略的是目录。</li><li>可以使用标准的 glob 模式匹配。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">idea</span></span><br><span class="line">/vendor</span><br><span class="line">.<span class="property">env</span></span><br><span class="line">/node_modules</span><br><span class="line">/public/storage</span><br><span class="line">*.<span class="property">txt</span></span><br></pre></td></tr></table></figure><a name="cNnLy"></a></li></ul><h3 id="冲突解决"><a href="#冲突解决" class="headerlink" title="冲突解决"></a>冲突解决</h3><p>不同分修改同一个文件或不同开发者修改同一个分支文件都可能造成冲突，造成无法提交代码。</p><ol><li>使用编辑器修改冲突的文件</li><li>添加暂存 git add . 表示已经解决冲突</li><li>git commit 提交完成<br><a name="oPHbm"></a></li></ol><h3 id="Stashing"><a href="#Stashing" class="headerlink" title="Stashing"></a>Stashing</h3><p>当你正在进行项目中某一部分的工作，里面的东西处于一个比较杂乱的状态，而你想转到其他分支上进行一些工作。问题是，你不想提交进行了一半的工作，否则以后你无法回到这个工作点。<br />“暂存” 可以获取你工作目录的中间状态——也就是你修改过的被追踪的文件和暂存的变更——并将它保存到一个未完结变更的堆栈中，随时可以重新应用。</p><ol><li>储藏工作 git stash</li><li>查看储藏列表 git stash list</li><li>应用最近的储藏 git stash apply</li><li>应用更早的储藏 git stash apply stash@{2}</li><li>删除储藏git stash drop stash@{0}</li><li>应用并删除储藏 git stash pop<br><a name="TEVxr"></a></li></ol><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>下面是最热的Github进行讲解，使用码云、codeing 等国内仓库使用方式一致，就不在赘述了。<br><a name="QDnj5"></a></p><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><ul><li><strong>生成秘钥</strong></li></ul><p>使用 ssh 连接 Github 发送指令更加安全可靠，也可以免掉每次输入密码的困扰。查看本机密钥：</p><blockquote><p>ssh-keygen -t rsa</p></blockquote><p>一直按回车键直到结束。系统会在~&#x2F;.ssh 目录中生成 id_rsa和id_rsa.pub，即密钥id_rsa和公钥id_rsa.pub。</p><ul><li><strong>向 GitHub 添加秘钥</strong></li></ul><p>点击 New SSH key 按钮，添加上面生成的 id_rsa.pub 公钥内容。<br><a name="OiLDT"></a></p><h3 id="关联远程"><a href="#关联远程" class="headerlink" title="关联远程"></a>关联远程</h3><ol><li><p>创建本地库并完成初始提交</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# hd-xj&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">&quot;first commit&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>添加远程仓库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:houdunwang/hd<span class="literal">-xj</span>.git</span><br></pre></td></tr></table></figure></li><li><p>查看远程库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="literal">-v</span></span><br></pre></td></tr></table></figure></li><li><p>推送数据到远程仓库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push <span class="literal">-u</span> origin master</span><br></pre></td></tr></table></figure></li><li><p>删除远程仓库关联</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin</span><br></pre></td></tr></table></figure></li></ol><p>通过 clone 克隆的仓库，本地与远程已经自动关联，上面几步都可以省略。<br><a name="wv00K"></a></p><h3 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h3><p>拉取远程主机某个分支的更新，再与本地的指定分支合并。</p><ol><li>拉取 origin 主机的 ask 分支与本地的 master 分支合并 git pull origin ask:ask</li><li>拉取 origin 主机的 ask 分支与当前分支合并 git pull origin ask</li><li>如果远程分支与当前本地分支同名直接执行 git pull<br><a name="ZsmAp"></a></li></ol><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>git push命令用于将本地分支的更新，推送到远程主机。它的格式与git pull命令相似。</p><ol><li><p>将当前分支推送到origin主机的对应分支(如果当前分支只有一个追踪分支 ，可省略主机名)</p><blockquote><p>git push origin</p></blockquote></li><li><p>使用-u选项指定一个默认主机 ,这样以后就可以不加任何参数直播使用git push。</p><blockquote><p>git push -u origin master</p></blockquote></li><li><p>删除远程ask分支 </p><blockquote><p>git push origin –delete ask</p></blockquote></li><li><p>本地 ask 分支关联远程分支并推送 </p><blockquote><p>git push –set-upstream origin ask</p></blockquote></li></ol><p><a name="umFfO"></a></p><h3 id="多库提交"><a href="#多库提交" class="headerlink" title="多库提交"></a>多库提交</h3><p>我可以将代码提交到多个远程版本库中，比如后盾人的 <a href="https://gitee.com/houdunren/code">课程代码</a> 就提交到了 Github 与 Gitee 两个库中。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加一个远程库</span></span><br><span class="line">git remote add github git@github.com:houdunwang/coding.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交到远程库</span></span><br><span class="line">git push github</span><br></pre></td></tr></table></figure><p>也可以创建命令一次提交到两个库(注：参考上面的命令设置章节)</p><blockquote><p>alias gp&#x3D;”git push &amp; git push github”</p></blockquote><p>补充。。。 多库提交 别名 安装 工作原理  服务器架设</p><hr><p>相关网站<br /><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496</a><br /><a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a><br /><a href="https://www.cnblogs.com/imyalost/p/8762522.html">https://www.cnblogs.com/imyalost/p/8762522.html</a><br /><a href="https://blog.csdn.net/adasdvvv/article/details/121299834">https://blog.csdn.net/adasdvvv/article/details/121299834</a><br /><a href="https://www.cnblogs.com/my-freedom/p/5701427.html">https://www.cnblogs.com/my-freedom/p/5701427.html</a><br />[</p><p>](<a href="https://www.cnblogs.com/my-freedom/p/5701427.html">https://www.cnblogs.com/my-freedom/p/5701427.html</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>editconfig</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/editconfig/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/editconfig/</url>
      
        <content type="html"><![CDATA[<h2 id="EDITORCONFIG是什么"><a href="#EDITORCONFIG是什么" class="headerlink" title="EDITORCONFIG是什么"></a>EDITORCONFIG是什么</h2><hr><p>当大家在公司工作时，不可能永远是一个人维护一个项目，当多个人参与一个项目，每个人使用的编辑器不一样，代码风格自然也不一样，那么如何让使用不同编辑器的开发者能够轻松惬意的遵守最基本的代码规范呢？最后终于找到了<a href="https://editorconfig.org/">editorConfig</a>这个东东，发现在这里配置的代码规范规则优先级高于编辑器默认的代码格式化规则。如果我没有配置editorconfig，执行的就是编辑器默认的代码格式化规则；如果我已经配置了<a href="https://editorconfig.org/">editorConfig</a>，则按照我设置的规则来，从而忽略浏览器的设置。<br /><a href="https://editorconfig.org/">EditorConfig</a>包含一个用于定义代码格式的文件和一批编辑器插件，这些插件是让编辑器读取配置文件并以此来格式化代码。<br><a name="KIKI5"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>VSCode安装非常简单，直接在插件市场搜索<a href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig">EditorConfig for vs code</a> 安装就行了，安装完毕记得重启编辑器。<br><a name="KGXPk"></a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><hr><ul><li>在当前项目根目录下添加.editorconfig文件</li><li>安装EditorConfig扩展 </li><li>全局安装或局部安装editorconfig依赖包(npm install -g editorconfig | npm install -D editorconfig)</li><li>打开需要格式化的文件并手动格式化代码（Mac OS ：shift+option+f  Windows ：shift+alt+f）</li></ul><p>可以通过资源管理器侧栏的上下文菜单右键选择Generate .editorconfig，然后这个目录下面就会创建出一个.editorconfig文件了，当然如果团队里有已经配置好的这个文件，直接复制过来就行了。<br><a name="Gly5U"></a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><hr><p><a name="Nl7vs"></a></p><h4 id="常用属性配置"><a href="#常用属性配置" class="headerlink" title="常用属性配置"></a>常用属性配置</h4><p>1、root<boolean>  :  是否是顶级配置文件，设置为true的时候才会停止搜索.editorconfig文件<br />2、charset&lt;”latin” | “utf-8” | “utf-8-bom” | “utf-16be” | “utf-16le”&gt;     :    文件编码格式<br />3、indent_style&lt;”tab” | “space”&gt;    ：  缩进方式<br />4、indent_size<number>    ：    缩进大小<br />5、end_of_line&lt;”lf” | “cr” | “crlf”&gt;    ：    换行符类型<br />6、insert_final_newline<boolean>   ：     是否让文件以空行结束<br />7、trim_trailing_whitespace<boolean>  ：   是否删除行尾空格 <br />8、max_line_length<number>    ：    最大行宽。<br><a name="FfkKp"></a></p><h4 id="常用文件名匹配"><a href="#常用文件名匹配" class="headerlink" title="常用文件名匹配"></a>常用文件名匹配</h4><p>1、*                  匹配除&#x2F;之外的任意字符<br />2、**                 匹配任意字符串<br />3、?                 匹配任意单个字符<br />4、[name]                 匹配name字符 <br />5、[!name]                 不匹配name字符<br />6、[s1,s2,s3]                 匹配给定的字符串<br />7、[num1..num2]                 匹配num1到mun2直接的整数</p><p>目前VSCode并不是所有属性都支持，所以只需要配置下面几个属性即可：</p><ul><li>indent_style</li><li>indent_size</li><li>tab_width</li><li>end_of_line （保存时）</li><li>insert_final_newline （保存时）</li><li>trim_trailing_whitespace （保存时）<br><a name="gI2oo"></a></li></ul><h2 id="使用建议"><a href="#使用建议" class="headerlink" title="使用建议"></a>使用建议</h2><hr><p>这个插件只能简单的配置一些规范，并不能完全满足需求，所以还需要其它代码检查工具配合使用，比如说：ESLint或StyleLint，统一代码风格。<br><a name="W6j5F"></a></p><h2 id="editorconfig文件规格"><a href="#editorconfig文件规格" class="headerlink" title=".editorconfig文件规格"></a>.editorconfig文件规格</h2><hr><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># EditorConfig helps developers define and maintain consistent</span></span><br><span class="line"><span class="section"># EditorConfig帮助开发人员定义和维护一致性</span></span><br><span class="line"><span class="section"># coding styles between different editors and IDEs</span></span><br><span class="line"><span class="section"># 不同编辑器和ide之间的编码样式</span></span><br><span class="line"><span class="section"># 打开需要格式化的文件并手动格式化代码（Mac OS ：shift+option+f  Windows ：shift+alt+f）</span></span><br><span class="line"><span class="section"># editorconfig.org</span></span><br><span class="line"><span class="section"># editorconfig顶级配置文件,停止向上寻找配置文件</span></span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line">[<span class="emphasis">*]</span></span><br><span class="line"><span class="emphasis"># change these settings to your own preference</span></span><br><span class="line"><span class="emphasis"># 将这些设置更改为您自己的首选项</span></span><br><span class="line"><span class="emphasis"># 缩进样式=空格</span></span><br><span class="line"><span class="emphasis">indent_style = space</span></span><br><span class="line"><span class="emphasis"># 缩进大小=2</span></span><br><span class="line"><span class="emphasis">indent_size = 2</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"># we recommend you to keep these unchanged</span></span><br><span class="line"><span class="emphasis"># 我们建议你保持这些不变</span></span><br><span class="line"><span class="emphasis"># 换行符类型 = lf</span></span><br><span class="line"><span class="emphasis">end_of_line = lf</span></span><br><span class="line"><span class="emphasis"># 字符集=utf-8</span></span><br><span class="line"><span class="emphasis">charset = utf-8</span></span><br><span class="line"><span class="emphasis"># 删除行尾空格 = 是</span></span><br><span class="line"><span class="emphasis">trim_trailing_whitespace = true</span></span><br><span class="line"><span class="emphasis"># 插入最后一行=真</span></span><br><span class="line"><span class="emphasis">insert_final_newline = true</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">[*</span>.md]</span><br><span class="line"><span class="section"># 删除行尾空格 = 否</span></span><br><span class="line">trim<span class="emphasis">_trailing_</span>whitespace = false</span><br><span class="line"></span><br><span class="line">[package.json]</span><br><span class="line"><span class="section"># 缩进样式=空格</span></span><br><span class="line">indent<span class="emphasis">_style = space</span></span><br><span class="line"><span class="emphasis"># 缩进大小=2</span></span><br><span class="line"><span class="emphasis">indent_</span>size = 2</span><br></pre></td></tr></table></figure><p><a name="DWUdc"></a></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><a name="gKxWQ"></a></p><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><hr><p><a href="https://www.cnblogs.com/jiaoshou/p/11252055.html">https://www.cnblogs.com/jiaoshou/p/11252055.html</a> * </p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>npm</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/npm/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/npm/</url>
      
        <content type="html"><![CDATA[<h2 id="NPM是什么"><a href="#NPM是什么" class="headerlink" title="NPM是什么"></a>NPM是什么</h2><hr><p> 包管理器(Package Manager)，npm 最初它只是被称为 Node Package Manager，用来作为Node.js的包管理器。但是随着其它构建工具(webpack、browserify)的发展，npm已经变成了 “the package manager for JavaScript”，它用来安装、管理和分享JavaScript包，同时会自动处理多个包之间的依赖。<br><a name="qGhBt"></a></p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><hr><ul><li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<br><a name="iDoa9"></a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p><strong>新版的nodejs已经集成了npm</strong><br />Node.js：nodejs分为了<strong>长期支持版</strong>和<strong>当前版本</strong>。<br />Linux中安装nodejs的方法：</p><ul><li><a href="https://link.jianshu.com/?t=https://nodejs.org/en/download/">官网</a> 下载压缩包解压到&#x2F;opt目录，修改解压目录的所属用户和组，然后配置环境变量（推荐）；</li><li>或者使用PPA安装：<a href="https://link.jianshu.com/?t=https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/#">How to Install Latest Nodejs &amp; NPM on Ubuntu with PPA - TecAdmin</a></li></ul><p><strong>升级现有npm版本</strong></p><blockquote><p>npm install npm -g </p></blockquote><p>貌似也可使用这种方法安装node，但是安装的是当前版本的node而非长期支持版本的node。</p><p><a name="ea4mY"></a></p><h2 id="npm包安装"><a href="#npm包安装" class="headerlink" title="npm包安装"></a>npm包安装</h2><hr><p>npm 的包安装分为<code>本地安装</code>（local）、<code>全局安装</code>（global）两种。<br><a name="gWD5G"></a></p><h4 id="本地安装-默认"><a href="#本地安装-默认" class="headerlink" title="本地安装(默认)"></a>本地安装(默认)</h4><p>npm install &lt;包&gt;   </p><ul><li>将安装包放在 .&#x2F;node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li><li>可以通过 require() 来引入本地安装的包。<br><a name="cg8Kb"></a></li></ul><h4 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h4><p>npm install &lt;包&gt; -g</p><ul><li>将安装包放在 &#x2F;usr&#x2F;local 下或者你 node 的安装目录。</li><li>可以直接在命令行里使用。<strong>这是使用全局安装的主要原因</strong>。</li></ul><p>使用下面的命令来查看全局的包安装的位置：</p><blockquote><p>npm prefix -g </p></blockquote><p><a name="FilLm"></a></p><h4 id="创建全局链接"><a href="#创建全局链接" class="headerlink" title="创建全局链接"></a>创建全局链接</h4><p>如果你希望具备两者功能（本地安装和全局安装的功能），则需要在两个地方安装它或使用 <strong>npm link</strong>。<br />npm link的功能是在本地包和全局包之间创建符号链接。我们说过使用全局模式安装的包不能直接通过 require 使用,但通过 npm link 命令可以打破这一限制。<br />比如我们将 express安装到了全局环境，使用下面的命令可以将其链接到本地环境：<br />npm link express <br />使用 npm link命令还可以将本地的包链接到全局。使用方法是在包目录( package.json 所在目录)中运行 npm link 命令。<br />如果你的项目不再需要该模块，可以在项目目录内使用npm unlink命令，删除符号链接。<br />像gem 或 pip 总是以全局模式安装，使包可以供所有的程序使用，而 npm 默认会把包安装到当前目录下。这反映了 npm 不同的设计哲学。如果把包安装到全局，可以提高程序的重复利用程度,避免同样的内容的多份副本，但坏处是难以处理不同的版本依赖。<br><a name="w2Ke6"></a></p><h2 id="更换镜像"><a href="#更换镜像" class="headerlink" title="更换镜像"></a>更换镜像</h2><hr><p><a name="eXc1d"></a></p><h4 id="淘宝镜像"><a href="#淘宝镜像" class="headerlink" title="淘宝镜像"></a>淘宝镜像</h4><p>对于国内的情形，在使用npm安装JS包之前建议先更改npm的镜像。<br />配置 npm 的国内镜像站点为：<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> 。<br />方法一：在系统的HOME目录新建.npmrc文件并添加 registry &#x3D; <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br />方法二：你可以使用淘宝定制的 cnpm 命令行工具代替默认的 npm:</p><blockquote><p>npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> &#x2F;&#x2F;之后即可使用cnpm来安装包 cnpm install &lt;包&gt; </p></blockquote><p>详情请参考： <a href="https://link.jianshu.com/?t=https://npm.taobao.org/">淘宝 NPM 镜像</a></p><p><a name="M7UIx"></a></p><h4 id="源镜像"><a href="#源镜像" class="headerlink" title="源镜像"></a>源镜像</h4><p> 安装nrm来管理源：</p><blockquote><p>npm install -g nrm</p></blockquote><p> 查看可以用的源：</p><blockquote><p>nrm ls</p></blockquote><p>切换源：</p><blockquote><p>nrm use 源的名称</p></blockquote><p> 测试源的延迟：</p><blockquote><p>nrm test</p></blockquote><p> 添加源的地址：</p><blockquote><p>nrm add 源名称 address</p></blockquote><p>PS D:\code\system-learning\font_page\npm_demo&gt; nrm add zz <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a></p><p><a name="Xi31n"></a></p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><hr><p>查看命令帮助</p><blockquote><p>npm help </p></blockquote><p>列出各命令</p><blockquote><p>npm -l </p></blockquote><p>查看安装信息</p><blockquote><p> npm ls -g   &#x2F;&#x2F;全局安装信息<br> npm ls   &#x2F;&#x2F;列出当前项目中的包</p></blockquote><p>树型结构列出当前项目安装的所有模块，以及它们依赖的模块</p><blockquote><p>npm list npm list -global npm list vue   加上global参数，会列出全局安装的模块。</p></blockquote><p>查看版本信息</p><blockquote><p>npm info jquery</p></blockquote><p> 查看更新版本 </p><blockquote><p>npm outdated jquery 如已经是最新版本，则无提示消息</p></blockquote><p>更新指定模块版本 </p><blockquote><p>npm update jquery   会根据npm outdataed jquery的wanted的结果来更新，</p></blockquote><p>更新所有版本 </p><blockquote><p>npm update</p></blockquote><p>升级npm本身的版本 </p><blockquote><p>npm install -g npm</p></blockquote><p>卸载包</p><blockquote><p>npm uninstall &lt;包名&gt; </p></blockquote><p>更新包</p><blockquote><p> npm update &lt;包名&gt;   更新当前项目中安装的某个包<br> npm update   &#x2F;&#x2F;更新当前项目中安装的所有包<br> npm update &lt;包名&gt; -g    &#x2F;&#x2F;更新全局安装的包</p></blockquote><p>搜索包</p><blockquote><p>npm search &lt;关键字&gt; </p></blockquote><p>列出npm的配置</p><blockquote><p>npm config list -l </p></blockquote><p>列出bin目录</p><blockquote><p>npm bin </p></blockquote><p><a name="cB7aR"></a></p><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><hr><p><strong>版本控制</strong><br />^3.3.1表示的是版本号  <br />格式如下  主版本号.次版本号.修改</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*3.3.1&quot;</span> <span class="comment">//允许主版本更新</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.1&quot;</span> <span class="comment">//允许次版本更新</span></span><br><span class="line">    <span class="attr">&quot;jquery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~3.3.1&quot;</span> <span class="comment">//允许bug更新</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>包的管理</strong></p><ul><li>aplha 版本底层结构还未确定，改动很大的版本</li><li>beta 底层架构已经定好，会哟一些交互上的改动，此版本可以用于内测，公测</li><li>rc 成熟的版本</li><li>realse 稳定的版本，最终版本</li></ul><p><strong>模块管理</strong><br><a name="GFero"></a></p><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><hr><p>当你的项目需要依赖多个包时，推荐使用 package.json。其优点为：</p><ul><li>它以文档的形式规定了项目所依赖的包</li><li>可以确定每个包所使用的版本</li><li>项目的构建可以重复，在多人协作时更加方便<br><a name="V9W38"></a></li></ul><h4 id="创建package-json文件"><a href="#创建package-json文件" class="headerlink" title="创建package.json文件"></a>创建package.json文件</h4><ul><li>手动创建</li><li>或者 通过 npm init 命令生成遵守规范的 package.json文件</li></ul><p>文件中必须包含： name 和 version<br><a name="I3Hpo"></a></p><h4 id="指定依赖包"><a href="#指定依赖包" class="headerlink" title="指定依赖包"></a>指定依赖包</h4><p>两种依赖包：</p><ul><li>dependencies: 在生产环境中需要依赖的包。通过npm install <packge> –save命令自动添加依赖到文件（或者使用简写的参数 -S）。</li><li>devDependencies：仅在开发和测试环节中需要依赖的包。通过npm install <packge> –save-dev命令自动添加依赖到文件（或者使用简写的参数 -D）。</li></ul><p>当然你也可以在文件中手动添加依赖<br />如果其他人也需要这个项目，只需要把这个 package.json 文件给他，然后进行简单的 npm install 即可<br><a name="uYrV3"></a></p><h4 id="npm-脚本"><a href="#npm-脚本" class="headerlink" title="npm 脚本"></a>npm 脚本</h4><p><a href="https://link.jianshu.com/?t=http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html">npm scripts 使用指南 - 阮一峰的网络日志</a><br /><a href="https://link.jianshu.com/?t=http://www.ruanyifeng.com/blog/2016/01/npm-install.html">npm 模块安装机制简介 - 阮一峰的网络日志</a><br><a name="kR4yc"></a></p><h4 id="npm-run"><a href="#npm-run" class="headerlink" title="npm run"></a>npm run</h4><p>package.json文件有一个scripts字段，可以用于指定脚本命令，供npm直接调用。<br />  “scripts”: {     “lint”: “jshint **.js”,     “test”: “mocha test&#x2F;“   } </p><blockquote><p>npm run lint可以运行脚本中的 lint 命令。npm run test可以运行脚本中的 test 命令。</p></blockquote><p>npm run命令会自动在环境变量$PATH添加node_modules&#x2F;.bin目录，所以scripts字段里面调用命令时不用加上路径，这就避免了全局安装NPM模块。<br />start和test属于特殊命令，可以省略run：</p><blockquote><p>npm start  npm test </p></blockquote><p>如果仅仅使用npm run会列出scripts属性下所有的命令：</p><blockquote><p>npm run </p></blockquote><p><a name="PZofP"></a></p><h2 id="包管理配置"><a href="#包管理配置" class="headerlink" title="包管理配置"></a>包管理配置</h2><hr><p><a name="w4jz6"></a></p><h4 id="设置默认配置"><a href="#设置默认配置" class="headerlink" title="设置默认配置"></a>设置默认配置</h4><p>使用 npm set 命令用来设置环境变量。<br />也可以用它来为 npm init设置默认值，这些值会保存在 ~&#x2F;.npmrc文件中。</p><blockquote><p>$ npm set init-author-name ‘Your name’<br>$ npm set init-author-email ‘Your email’<br>$ npm set init-author-url ‘<a href="http://yourdomain.com&/#39;">http://yourdomain.com&#39;</a><br>$ npm set init-license ‘MIT’ </p></blockquote><p><a name="ID548"></a></p><h4 id="更改全局安装目录"><a href="#更改全局安装目录" class="headerlink" title="更改全局安装目录"></a>更改全局安装目录</h4><p>使用npm config命令可以达到此目的。</p><blockquote><p>npm config set prefix &lt;目录&gt; </p></blockquote><p>或者手动在 ~&#x2F;.npmrc文件中进行配置：</p><blockquote><p>prefix &#x3D; &#x2F;home&#x2F;yourUsername&#x2F;npm </p></blockquote><p>更改目录后记得在系统环境变量 PATH中添加该路径：</p><blockquote><h1 id="bashrc-文件-export-PATH-x3D-x2F-npm-x2F-bin-PATH"><a href="#bashrc-文件-export-PATH-x3D-x2F-npm-x2F-bin-PATH" class="headerlink" title=".bashrc 文件 export PATH&#x3D;~&#x2F;npm&#x2F;bin:$PATH"></a>.bashrc 文件 export PATH&#x3D;~&#x2F;npm&#x2F;bin:$PATH</h1></blockquote><p><a name="WvCI1"></a></p><h2 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h2><hr><p>在发布之前,首先需要让我们的包符合 npm 的规范,npm 有一套以 CommonJS 为基础包规范,但与 CommonJS并不完全一致,其主要差别在于必填字段的不同。通过使用 npm init 可以根据交互问答产生一个符合标准的 package.json。<br />也可简单的使用 npm init -y。其中-y（代表yes）<br />该文件是一个符合 npm 规范的 package.json 文件。这里的 index.js 作为包的接口。<br />创建帐号：</p><blockquote><p>npm adduser </p></blockquote><p>测试是否取得帐号：</p><blockquote><p>npm whoami </p></blockquote><p>发布</p><blockquote><p>npm publish </p></blockquote><p>更新包：</p><blockquote><p>修改 <code>version</code>字段，再重新发布</p></blockquote><p>取消发布：</p><blockquote><p>npm unpublish </p></blockquote><hr><p>学习资料<br /><a href="https://link.jianshu.com/?t=http://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍 - 菜鸟教程</a> <br /><a href="https://link.jianshu.com/?t=https://docs.npmjs.com/">npm Documentation</a> <br /><a href="https://link.jianshu.com/?t=https://gxnotes.com/article/45185.html">如何卸载使用npm链接安装的软件包？</a> <br /><a href="https://link.jianshu.com/?t=http://javascript.ruanyifeng.com/nodejs/packagejson.html">package.json文件 – JavaScript 标准参考教程（alpha）</a> <br /><a href="https://link.jianshu.com/?t=http://javascript.ruanyifeng.com/nodejs/npm.html">npm模块管理器 – JavaScript 标准参考教程（alpha）</a></p><p>相关网站:<br /><a href="https://blog.csdn.net/qq_33051685/article/details/84931218">https://blog.csdn.net/qq_33051685&#x2F;article&#x2F;details&#x2F;84931218</a><br /><a href="https://www.jianshu.com/p/60ac7fe6edce">https://www.jianshu.com/p/60ac7fe6edce</a><br /><a href="https://www.runoob.com/nodejs/nodejs-npm.html">https://www.runoob.com/nodejs/nodejs-npm.html</a><br /><a href="https://zhuanlan.zhihu.com/p/258080852">https://zhuanlan.zhihu.com/p/258080852</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nvm</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/nvm/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/nvm/</url>
      
        <content type="html"><![CDATA[<h2 id="NVM是什么"><a href="#NVM是什么" class="headerlink" title="NVM是什么"></a>NVM是什么</h2><hr><p>nvm全英文也叫node.js version management，是一个nodejs的版本管理工具。nvm和n都是node.js版本管理工具，为了解决node.js各种版本存在不兼容现象可以通过它可以安装和切换不同版本的node.js。<br><a name="i0VcT"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a>官网指引</h2><hr><p>文档：<a href="https://github.com/nvm-sh/nvm/blob/master/README.md">https://github.com/nvm-sh/nvm/blob/master/README.md</a><br><a name="d19R8"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><ol><li><strong>安装准备工作</strong><blockquote><p>安装之前对其进行操作<br>如果安装了node，首先将电脑中关于node.js的东西全部删除掉：<br>卸载node.js<br>在node的安装目录中再次查看，是否还有node文件夹，如果有，一起删除<br>在C:\Users\用户名 文件夹下查看是否存在 .npmrc 以及 .yarnrc 文件，如果有，请删除<br>环境变量中将node相关的也删除</p></blockquote></li></ol><ul><li>检查电脑是否安装nodejs环境</li><li>存在进行删除卸载操作 </li><li>在用户文件夹下是否存在.npmrc以及.yarnrc文件 如果有全部删除 连带环境变量也进行删除</li></ul><ol start="2"><li><strong>下载</strong><a href="https://github.com/coreybutler/nvm-windows/releases"><strong>nvm地址</strong></a></li></ol><ul><li>nvm-noinstall.zip是免安装版，需要进行环境配置</li><li>nvm-setup.zip是安装版，安装过后直接使用，<code>最好使用</code>安装版。</li></ul><ol start="3"><li><strong>图形化界面</strong><code>**next**</code><strong>依次点击安装，这些操作最好在powershell命令界面下使用</strong><blockquote><p>配置目录 : nvm安装目录下存在settings.txt</p></blockquote></li></ol><p><a name="qJAn9"></a></p><h2 id="更换镜像"><a href="#更换镜像" class="headerlink" title="更换镜像"></a>更换镜像</h2><hr><p>nvm会安装不存在node和npm，默认源在国外，建议换国内源。如果下载node过慢，请更换国内镜像源, 在 nvm 的安装路径下，找到 settings.txt，设置node_mirro与npm_mirror为国内镜像地址。<br />或者去nvm根目录 <strong>C:\Users...Roaming\nvm</strong>下修改setting文件：</p><blockquote><p>nvm node_mirror <a href="https://npm.taobao.org/mirrors/node/">https://npm.taobao.org/mirrors/node/</a><br>nvm npm_mirror  <a href="https://npm.taobao.org/mirrors/npm/">https://npm.taobao.org/mirrors/npm/</a></p></blockquote><p>注意，这里设置的是安装node和npm本身的源，并不是设置安装node包的源，可以在选择好node后，执行</p><blockquote><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></blockquote><p>可通过 <strong>npm config list</strong> 查看。</p><p><a name="QVhnM"></a></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><hr><p>打开PowerShell命令窗口，输入nvm，出现该界面说明安装成功 <br />查看安装过的所有node.js版本</p><blockquote><p>nvm list</p></blockquote><p>安装新版本(这里我已经安装过，版本号根据需求操作)</p><blockquote><p>nvm install 12.18.3</p></blockquote><p>切换或使用指定版本</p><blockquote><p>nvm use 12.18.3</p></blockquote><p>卸载指定版本</p><blockquote><p>nvm uninstall 12.18.3</p></blockquote><p>查看nvm安装路径</p><blockquote><p>nvm root</p></blockquote><p>下载最新的node版本和与之对应的npm版本</p><blockquote><p>nvm install latest  </p></blockquote><p>显示可下载版本的部分列表</p><blockquote><p>nvm list available</p></blockquote><p>安装最新稳定版 node，当前是 node v12.9.1 (npm v7.9.0)</p><blockquote><p>nvm install stable  </p></blockquote><p>安装指定版本，可模糊安装，如：安装 v4.4.0，既可 </p><blockquote><p>nvm install v4.4.0，又可 $ nvm install 4.4$ nvm install <version>  </p></blockquote><p>删除已安装的指定版本，语法与 install 用法一致</p><blockquote><p> nvm uninstall <version>  </p></blockquote><p>切换使用指定的版本 </p><blockquote><p>&#x2F;&#x2F; 临时版本 - 只在当前窗口生效指定版本<br>$ nvm use <version> </p><p>&#x2F;&#x2F; 永久版本 - 所有窗口生效指定版本<br>$ nvm alias default <version>  </p></blockquote><p>注意：在任意一个命令行窗口进行切换之后，其他的窗口或其他命令行工具窗口 需要关掉工具，重启才能生效。（例如 VSCode 内或外部命令切换之后，需要重启 VSCode，才能正常生效，否则或处于 临时生效状态，也就是在 VSCode 中重新打开一个命令行查看版本还会是旧版本，所以必须要重启。）这里的 重启 不是简单的关掉窗口重启，没有退出后台进程，而是完全退出杀死工具进程，重新启动。<br />列出所有远程服务器的版本（官方 node version list）</p><blockquote><p>$ nvm ls-remote  </p></blockquote><p>显示当前的版本</p><blockquote><p>$ nvm current  </p></blockquote><p>给不同的版本号添加别名</p><blockquote><p> nvm alias <name> <version>  </p></blockquote><p>删除已定义的别名</p><blockquote><p>$ nvm unalias <name>  </p></blockquote><p>在当前版本 node 环境下，重新全局安装指定版本号的 npm 包</p><blockquote><p>$ nvm reinstall-packages <version></p></blockquote><p><strong>补充</strong></p><ul><li>nvm arch：显示node是运行在32位还是64位。</li><li>nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加–insecure绕过远程服务器的SSL。</li><li>nvm list [available] ：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。</li><li>nvm on ：开启node.js版本管理。</li><li>nvm off ：关闭node.js版本管理。</li><li>nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。</li><li>nvm node_mirror [url] ：设置node镜像。默认是<a href="https://nodejs.org/dist/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82">https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li><li>nvm npm_mirror [url] ：设置npm镜像。<a href="https://github.com/npm/cli/archive/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82">https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li><li>nvm uninstall <version> ：卸载指定版本node。</li><li>nvm use [version] [arch] ：使用制定版本node。可指定32&#x2F;64位。</li><li>nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。</li><li>nvm version ：显示nvm版本。version可简化为v。</li></ul><p><a name="fT0IT"></a></p><h2 id="包管理器缓存配置"><a href="#包管理器缓存配置" class="headerlink" title="包管理器缓存配置"></a>包管理器缓存配置</h2><hr><p><strong>终端命令式修改</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看缓存目录</span></span><br><span class="line">npm config get cache</span><br><span class="line">yarn cache dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理缓存包</span></span><br><span class="line">npm cache clean --force</span><br><span class="line">yarn cache clean</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置npm缓存目录:修改默认在C盘的缓存，防止C盘过大（提前建立好缓存文件夹）</span></span><br><span class="line">npm config set prefix <span class="string">&quot;D:\nvm-temp\node-global&quot;</span></span><br><span class="line">npm config set cache <span class="string">&quot;D:\nvm-temp\node-cache&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Yarn缓存目录: 第一步</span></span><br><span class="line">yarn config set prefix D:\nvm-temp\yarn-global</span><br><span class="line">yarn config set cache-folder D:\nvm-temp\yarn-cache</span><br><span class="line">yarn config set global-folder D:\nvm-temp\yarn-global</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步，打开%userprofile%，修改.yarnrc，添加新行：</span></span><br><span class="line">--global-folder <span class="string">&quot;D:\\nvm-temp\\yarn-global&quot;</span></span><br><span class="line"><span class="comment"># 最后通过yarn global dir验证一下修改是否成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前源</span></span><br><span class="line">npm get registry</span><br><span class="line">yarn config get registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置镜像源</span></span><br><span class="line">npm config set registry http://registry.npm.taobao.org/</span><br><span class="line">yarn config set registry http://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装淘宝的cnpm</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装tyarn</span></span><br><span class="line">npm i yarn tyarn -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># yarn中global包升级</span></span><br><span class="line">yarn global upgrade</span><br><span class="line"></span><br><span class="line"><span class="comment"># yarn中特定包升级</span></span><br><span class="line">yarn upgrade -lastest umi</span><br><span class="line">yarn upgrade umi@3.0.0</span><br></pre></td></tr></table></figure><p><strong>PATH环境变量</strong><br />我们要将执行文件的目录，添加到系统变量中，这样才能支持那些包的命令行运行，其中包括：</p><ol><li>npm的global文件夹，比如G:\temp\node-global</li><li>yarn的global的bin文件夹，比如G:\temp\yarn-global</li></ol><p>添加到系统的PATH系统变量（环境变量）中。为避免错误，建议将新添加的系统变量提升到列表顶端，随后重启电脑。<br />如果不重启电脑的话，可能导致部分编辑器的集成命令行因没有同步系统变量而找不到执行文件。</p><p><a name="iVG0z"></a></p><h2 id="nvm-如何实现-node-版本切换"><a href="#nvm-如何实现-node-版本切换" class="headerlink" title="nvm 如何实现 node 版本切换"></a>nvm 如何实现 node 版本切换</h2><hr><p>在安装 nvm 时候让记下两个安装路径：（下面称 nvm 路径和 node 路径）<br />nvm安装路径默认为: C:&#x2F;&#x2F;Users&#x2F;Administrator&#x2F;AppData&#x2F;Roming&#x2F;nvm nvm安装的node路径默认为: C:&#x2F;&#x2F;ProgramFile&#x2F;nodejs （其实是个快捷方式） </p><ul><li>在计算机切换到 nvm 路径： <img src="https://cdn.nlark.com/yuque/0/2022/png/1427114/1643172811577-7692f61b-859b-4c25-85f7-702ed160a4a6.png#clientId=ue65e45f8-0cf4-4&from=paste&height=230&id=u92e4c50d&margin=%5Bobject%20Object%5D&originHeight=307&originWidth=799&originalType=url&ratio=1&status=done&style=none&taskId=u8bd7873d-cb84-43aa-bcaa-29e57ea4aab&width=599">这是 dk 计算机上的 nvm 目录，当前安装了两个版本的 node，想使用哪个版本的 node，本质上是创建要使用那个 node 版本的快捷方式，替换 <strong>node 路径</strong> 。</li><li>在计算机切换到 node 路径： <img src="https://cdn.nlark.com/yuque/0/2022/png/1427114/1643172811584-b128b1e2-bcac-4d05-8337-90dfe8dce027.png#clientId=ue65e45f8-0cf4-4&from=paste&height=537&id=u9a8baf8c&margin=%5Bobject%20Object%5D&originHeight=716&originWidth=840&originalType=url&ratio=1&status=done&style=none&taskId=uc9ea8f1d-df28-4ce7-be92-d7be82212cc&width=630">可以看到，这个目录有个 node_modules 文件夹和许多 cmd 命令，未来安装的全局包都放在这里。</li></ul><hr><p>相关网站<br /><a href="https://www.runoob.com/w3cnote/nvm-manager-node-versions.html">https://www.runoob.com/w3cnote/nvm-manager-node-versions.html</a><br /><a href="https://blog.csdn.net/Y1914960928/article/details/121748603">https://blog.csdn.net/Y1914960928/article/details/121748603</a><br /><a href="https://dkvirus.gitbooks.io/-npm/content/21-shi-yong-nvm-an-zhuang-npm.html">https://dkvirus.gitbooks.io/-npm/content/21-shi-yong-nvm-an-zhuang-npm.html</a><br /><a href="http://nvm.uihtm.com/">http://nvm.uihtm.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>prettier</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/prettier/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/prettier/</url>
      
        <content type="html"><![CDATA[<h2 id="PRETTIER是什么"><a href="#PRETTIER是什么" class="headerlink" title="PRETTIER是什么"></a>PRETTIER是什么</h2><hr><p>prettier 介绍是一个支持多种语言的 opinionated 代码格式化工具，可以集成到多种编辑器，支持少量的配置。所谓 opinionated，英文翻译为武断的，固执己见的，也就是说 prettier 的配置都是设计好的，不支持自由配置（类似于 Mac，东西都在主板上给你焊死了，不支持自己升级配置）<br><a name="GhBxl"></a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><hr><p>prettier 的原理很简单，就是把你的代码转化成一个抽象语法树 AST （因为 AST 是跟原本的代码风格无关的），然后根据 AST 将代码按照 prettier 的风格输出即可。想要看看 prettier 的转化过程，可以看 prettier 官方提供的<a href="https://prettier.io/playground/">检测网站</a>（如果你有 issue 要提交也是先到这个页面复现你的 bug 然后提交链接到 github）。<br><a name="oupFq"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a>官网指引</h2><hr><p>中文官网：<a href="https://www.prettier.cn/">https://www.prettier.cn/</a><br />在线格式化：<a href="https://prettier.io/playground/">https://prettier.io/playground/</a><br><a name="QbWv6"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>最基础的使用方式就是使用 yarn 或者 npm 安装，然后在命令行使用。</p><blockquote><p>npm install –save-dev –save-exact prettier<br>yarn add –dev –exact prettier </p></blockquote><p>然后在文件夹中创建配置文件和 ignore 文件。关于配置文件支持多种形式：</p><ul><li>在 package.json 中添加一个 prettier 对象，在内部写入配置。</li><li>一个 JSON 或 YAML 格式的 .prettierrc 文件。</li><li>一个 .prettierrc.json, .prettierrc.yml, .prettierrc.yaml, 或 .prettierrc.json5 文件。</li><li>一个 .prettierrc.js, .prettierrc.cjs, prettier.config.js 或 prettier.config.cjs 文件，文件要用 module.exports exprts 一个对象。</li><li>一个 prettierrc.toml 文件。<br><a name="tVlNs"></a></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><hr><p><strong>操作选择在</strong><code>**工程目录**</code><strong>下进行</strong><br /><strong>.prettier.js文件创建格式化参考规则</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此处的规则供参考，其中多半其实都是默认值，可以根据个人习惯改写</span></span><br><span class="line">module.exports = <span class="punctuation">&#123;</span></span><br><span class="line">  printWidth<span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span> <span class="comment">//单行长度</span></span><br><span class="line">  tabWidth<span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="comment">//缩进长度</span></span><br><span class="line">  useTabs<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//使用空格代替tab缩进</span></span><br><span class="line">  semi<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//句末使用分号</span></span><br><span class="line">  singleQuote<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//使用单引号</span></span><br><span class="line">  quoteProps<span class="punctuation">:</span> &#x27;as-needed&#x27;<span class="punctuation">,</span> <span class="comment">//仅在必需时为对象的key添加引号</span></span><br><span class="line">  jsxSingleQuote<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// jsx中使用单引号</span></span><br><span class="line">  trailingComma<span class="punctuation">:</span> &#x27;all&#x27;<span class="punctuation">,</span> <span class="comment">//多行时尽可能打印尾随逗号</span></span><br><span class="line">  bracketSpacing<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//在对象前后添加空格-eg: &#123; foo: bar &#125;</span></span><br><span class="line">  jsxBracketSameLine<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">//多属性html标签的‘&gt;’折行放置</span></span><br><span class="line">  arrowParens<span class="punctuation">:</span> &#x27;always&#x27;<span class="punctuation">,</span> <span class="comment">//单参数箭头函数参数周围使用圆括号-eg: (x) =&gt; x</span></span><br><span class="line">  requirePragma<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//无需顶部注释即可格式化</span></span><br><span class="line">  insertPragma<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//在已被preitter格式化的文件顶部加上标注</span></span><br><span class="line">  proseWrap<span class="punctuation">:</span> &#x27;preserve&#x27;<span class="punctuation">,</span> <span class="comment">//不知道怎么翻译</span></span><br><span class="line">  htmlWhitespaceSensitivity<span class="punctuation">:</span> &#x27;ignore&#x27;<span class="punctuation">,</span> <span class="comment">//对HTML全局空白不敏感</span></span><br><span class="line">  vueIndentScriptAndStyle<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//不对vue中的script及style标签缩进</span></span><br><span class="line">  endOfLine<span class="punctuation">:</span> &#x27;lf&#x27;<span class="punctuation">,</span> <span class="comment">//结束行形式</span></span><br><span class="line">  embeddedLanguageFormatting<span class="punctuation">:</span> &#x27;auto&#x27;<span class="punctuation">,</span> <span class="comment">//对引用代码进行格式化</span></span><br><span class="line"><span class="punctuation">&#125;</span>;</span><br></pre></td></tr></table></figure><p><strong>.prettierignore忽略文件格式化</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">node_modules</span><br><span class="line">node_modules/**/*</span><br><span class="line">node_modules/**/*.*</span><br><span class="line">/dist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># local env files</span></span><br><span class="line">.env.local</span><br><span class="line">.env.*.local</span><br><span class="line"></span><br><span class="line"><span class="comment"># Log files</span></span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br><span class="line">pnpm-debug.log*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Editor directories and files</span></span><br><span class="line">.idea</span><br><span class="line">.vscode</span><br><span class="line">*.suo</span><br><span class="line">*.ntvs*</span><br><span class="line">*.njsproj</span><br><span class="line">*.sln</span><br><span class="line">*.sw?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重要的环境依赖文件</span></span><br><span class="line">package.json</span><br><span class="line">package.lock.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代码格式化插件的配置文件</span></span><br><span class="line">.prettierrc</span><br><span class="line">.prettierignore</span><br><span class="line"></span><br><span class="line"><span class="comment"># git忽略文件</span></span><br><span class="line">.gitignore</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不对markdown进行格式化, 容易打乱自己编排的样式</span></span><br><span class="line">*.md</span><br></pre></td></tr></table></figure><p><a name="JtDKu"></a></p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><hr><p><strong>命令行格式化</strong><br />（1）格式化全部文档</p><blockquote><p>npx prettier –write .<br> &#x2F;&#x2F;或<br>yarn prettier –write . </p></blockquote><p>（2）格式化指定文档</p><blockquote><p>npx prettier –write src&#x2F;components&#x2F;Button.js<br>&#x2F;&#x2F;或<br>yarn prettier –write src&#x2F;components&#x2F;Button.js </p></blockquote><p>（3）检查文档是否已格式化</p><blockquote><p>npx prettier –check .<br>&#x2F;&#x2F;或<br>yarn prettier –check . &#x2F;&#x2F;检查指定文件同上</p></blockquote><p><a name="KfD5x"></a></p><h2 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h2><hr><p><a name="PLga8"></a></p><h3 id="利用编辑器插件进行格式化"><a href="#利用编辑器插件进行格式化" class="headerlink" title="利用编辑器插件进行格式化"></a>利用编辑器插件进行格式化</h3><p>在编辑器中搜索相应的 Prettier 安装，即可运用编辑器快捷键进行格式化。</p><table><thead><tr><th>常见的编辑器</th><th>对应插件名</th></tr></thead><tbody><tr><td>VS Code</td><td>Prettier - Code formatter</td></tr><tr><td>Emacs</td><td>prettier-emacs</td></tr><tr><td>Vim</td><td>vim-prettier</td></tr><tr><td>Sublime Text</td><td>JsPrettier</td></tr><tr><td>Atom</td><td>prettier-atom</td></tr></tbody></table><p>重要提示：编辑器中的 Prettier 格式化规则也可在设置中编写，但实际执行时会以本地规则为优先。</p><p>在命令行中使用时非常麻烦的，一般来说我们都是在编辑器中使用 prettier。这里讲一讲我平时在 vscode 中的配置。<br />首先是安装 extension：<a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">prettier – vscode</a>。然后用快捷键 ⇧ + ⌘ + P 来启动 Command palette，找到 format XXX with 然后选择 Configure default formatter，选择 prettier 即可设置为默认的格式化工具。<br />想要在保存时自动格式化，我们可以用 ⌘ + , 打开设置页面，找到 format on save 打上勾即可。<br />这些配置都是可以在 setting.json 中进行配置的，这里我放上我的关于 prettier 的 vscode 配置。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//prettier</span></span><br><span class="line">    <span class="string">&quot;[html]&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;[javascript]&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;[typescript]&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;[css]&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;[less]&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/*  prettier的配置 */</span></span><br><span class="line">    <span class="string">&quot;prettier.printWidth&quot;</span>: <span class="number">100</span>, <span class="comment">// 超过最大值换行</span></span><br><span class="line">    <span class="string">&quot;prettier.tabWidth&quot;</span>: <span class="number">4</span>, <span class="comment">// 缩进字节数</span></span><br><span class="line">    <span class="string">&quot;prettier.useTabs&quot;</span>: <span class="literal">false</span>, <span class="comment">// 缩进不使用tab，使用空格</span></span><br><span class="line">    <span class="string">&quot;prettier.semi&quot;</span>: <span class="literal">true</span>, <span class="comment">// 句尾添加分号</span></span><br><span class="line">    <span class="string">&quot;prettier.singleQuote&quot;</span>: <span class="literal">true</span>, <span class="comment">// 使用单引号代替双引号</span></span><br><span class="line">    <span class="string">&quot;prettier.proseWrap&quot;</span>: <span class="string">&quot;preserve&quot;</span>, <span class="comment">// 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行</span></span><br><span class="line">    <span class="string">&quot;prettier.arrowParens&quot;</span>: <span class="string">&quot;avoid&quot;</span>, <span class="comment">//  (x) =&gt; &#123;&#125; 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span></span><br><span class="line">    <span class="string">&quot;prettier.bracketSpacing&quot;</span>: <span class="literal">true</span>, <span class="comment">// 在对象，数组括号与文字之间加空格 &quot;&#123; foo: bar &#125;&quot;</span></span><br><span class="line">    <span class="string">&quot;prettier.disableLanguages&quot;</span>: [<span class="string">&quot;vue&quot;</span>], <span class="comment">// 不格式化vue文件，vue文件的格式化单独设置</span></span><br><span class="line">    <span class="string">&quot;prettier.endOfLine&quot;</span>: <span class="string">&quot;auto&quot;</span>, <span class="comment">// 结尾是 \n \r \n\r auto</span></span><br><span class="line">    <span class="comment">//&quot;prettier.eslintIntegration&quot;: false, //不让prettier使用eslint的代码格式进行校验</span></span><br><span class="line">    <span class="string">&quot;prettier.htmlWhitespaceSensitivity&quot;</span>: <span class="string">&quot;ignore&quot;</span>,</span><br><span class="line">    <span class="string">&quot;prettier.ignorePath&quot;</span>: <span class="string">&quot;.prettierignore&quot;</span>, <span class="comment">// 不使用prettier格式化的文件填写在项目的.prettierignore文件中</span></span><br><span class="line">    <span class="string">&quot;prettier.jsxBracketSameLine&quot;</span>: <span class="literal">false</span>, <span class="comment">// 在jsx中把&#x27;&gt;&#x27; 是否单独放一行</span></span><br><span class="line">    <span class="string">&quot;prettier.jsxSingleQuote&quot;</span>: <span class="literal">false</span>, <span class="comment">// 在jsx中使用单引号代替双引号</span></span><br><span class="line">    <span class="string">&quot;prettier.requireConfig&quot;</span>: <span class="literal">false</span>, <span class="comment">// Require a &#x27;prettierconfig&#x27; to format prettier</span></span><br><span class="line">    <span class="string">&quot;prettier.trailingComma&quot;</span>: <span class="string">&quot;es5&quot;</span>, <span class="comment">// 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>setting.json 中的配置是对所有项目生效的，你也可以在项目中创建 prettier 的配置文件进行覆盖。<br><a name="wQ8om"></a></p><h2 id="配合其它工具使用"><a href="#配合其它工具使用" class="headerlink" title="配合其它工具使用"></a>配合其它工具使用</h2><hr><p>通常我们会使用 Linter 来检查代码的规范，比如 ESLint、TSLint、Stylelint。他们在某些规则上会与 Prettier 相互矛盾。<br />解决这个问题我以 ESLint 为例，安装 eslint-config-prettier，并在 ESLint 的配置文件的 extends 添加 prettier。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.json</span></span><br><span class="line">&#123;····</span><br><span class="line">  <span class="string">&quot;extends&quot;</span>: [<span class="string">&quot;eslint:recommended&quot;</span>, <span class="string">&quot;prettier&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TSLint 和 Stylelint 如法炮制。具体可参看以下项目：</p><ul><li><a href="https://github.com/prettier/tslint-config-prettier">tslint-config-prettier</a></li><li><a href="https://github.com/prettier/stylelint-config-prettier">stylelint-config-prettier</a></li></ul><p><a name="NQrtP"></a></p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>如果你不喜欢 Prettier 将 HTML 、Vue 模板 或者 JSX 等的默认配置 “whitespace-sensitive”: “css” 格式化时把一对尖括号分为两行：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- input --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dolorum atque aspernatur&quot;</span>&gt;</span>Est molestiae sunt facilis qui rem.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;voluptatem architecto at&quot;</span>&gt;</span>Architecto rerum architecto incidunt sint.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- output --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dolorum atque aspernatur&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span>Est molestiae sunt facilis qui rem.&lt;/span</span><br><span class="line">&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;voluptatem architecto at&quot;</span>&gt;</span></span><br><span class="line">  Architecto rerum architecto incidunt sint.</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以配置 Prettier 的 whitespace-sensitive 选项为 ignore。</p><p><a name="QSRGC"></a></p><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><hr><p><a href="https://juejin.cn/post/6938687606687432740">https://juejin.cn/post/6938687606687432740</a><br /><a href="https://segmentfault.com/a/1190000012909159">https://segmentfault.com/a/1190000012909159</a><br /><a href="https://www.cnblogs.com/fitzlovecode/p/code_formater.html">https://www.cnblogs.com/fitzlovecode/p/code_formater.html</a>  <br /><a href="https://www.clloz.com/programming/front-end/js/2020/08/31/prettier-eslint/">https://www.clloz.com/programming/front-end/js/2020/08/31/prettier-eslint/</a><br /><a href="https://www.prettier.cn/">Prettier中文网</a><br />[</p><p>](<a href="https://juejin.cn/post/6938687606687432740">https://juejin.cn/post/6938687606687432740</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vscode</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/vscode/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/vscode/</url>
      
        <content type="html"><![CDATA[<h2 id="VSCODE是什么"><a href="#VSCODE是什么" class="headerlink" title="VSCODE是什么"></a>VSCODE是什么</h2><hr><p>VSCode（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器。该软件支持语法高亮、代码自动补全（又称 IntelliSense）、代码重构、查看定义功能，并且内置了命令行工具和 Git 版本控制系统。用户可以更改主题和键盘快捷方式实现个性化设置，也可以通过内置的扩展程序商店安装扩展以拓展软件功能。<br />VS Code 使用 Monaco Editor 作为其底层的代码编辑器。</p><p><a name="VXmJ4"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a>官网指引</h2><hr><p>官网地址：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a><br />文档地址：<a href="https://code.visualstudio.com/docs">https://code.visualstudio.com/docs</a><br><a name="z4keK"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>下载安装so easy 这里不对其过多解释<br />在 VScode 官网首页下载对应系统（支持Windows、Linux、macOS）的软件，下载页面： <a href="https://code.visualstudio.com/download">https://code.visualstudio.com/download</a>  稳定版（Stable）</p><ul><li>解压压缩包，打开可执行文件 点击NEXT</li><li>选中协议 点击NEXT</li><li>选择安装路径 直接使用默认 点击NEXT</li><li>注意安装路径 环境变量默认自动添加到系统中 勾选所有选中项 点击NEXT</li><li>点击install 完成安装</li></ul><p><strong>界面说明</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1427114/1643247626731-59ffd3ab-0bea-4c2a-9ad0-a8035f8499f8.png#clientId=u94a38fce-139b-4&from=paste&id=ubea5d09b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=977&originWidth=2560&originalType=url&ratio=1&size=611411&status=done&style=none&taskId=ub65601a1-5000-4130-82ce-3bea8ea9a0a" alt="image.png"><br><a name="pJr6d"></a></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><hr><p><a name="rKjnX"></a></p><h4 id="美化系列"><a href="#美化系列" class="headerlink" title="美化系列"></a>美化系列</h4><p><code>chinese</code> 汉化版本<br /><code>vscode-icons</code>文件图标<br /><code>Material Icon Theme</code>文件图标<br /><code>Atom One Dark Theme</code>暗色主题<br /><code>Live Server</code>实时预览<br /><code>Live Server Html</code>编辑器开窗预览<br /><code>open in Brower</code>用浏览器打开脚本文件<br /><code>A-super-tranlate</code>画词翻译<br /><code>Beautify</code>代码美化<br /><code>ESlint</code>代码检查<br /><code>Prettier</code>代码格式化<br /><code>Editconfig</code>编码格式<br /><code>Bracket Pair Colorizer</code>给匹配括号上色<br /><code>Markdown Preview Enhanced</code>MarkDown编写预览<br><a name="JzY1b"></a></p><h4 id="效率系列"><a href="#效率系列" class="headerlink" title="效率系列"></a>效率系列</h4><p><code>vscode-intellij-recent-files</code>快速在最近文件间切换<br /><code>Code Runner</code>万能语言运行环境<br /><code>Debugger for Chrome</code>调试工具<br /><code>Document this</code>快速注释<br /><code>Code Spell Checker</code>代码拼写检查<br /><code>TODO Highlight</code>备忘插件<br /><code>Draw.io Integration</code>图表工具<br /><code>easy-less</code>编译less文件<br /><code>Turbo Console Log</code>快速添加console.log信息<br><a name="ilKkK"></a></p><h4 id="布局样式系列"><a href="#布局样式系列" class="headerlink" title="布局样式系列"></a>布局样式系列</h4><p><code>IntelliSense for CSS class names in HTML</code> CSS类名提示<br /><code>Auto Close Tag</code>自动添加闭合关闭标签<br /><code>HTML Snippets</code>html代码片段<br /><code>Auto Rename Tag</code>自动更改标签前后名<br /><code>Highlight Matching</code>高亮匹配标签<br /><code>CSS Peek</code>查看css定义<br><a name="Kiuu4"></a></p><h4 id="补充系列"><a href="#补充系列" class="headerlink" title="补充系列"></a>补充系列</h4><p><code>px to rem&amp;rpx</code>  px转换<br><a name="QmvSo"></a></p><h4 id="React系列"><a href="#React系列" class="headerlink" title="React系列"></a>React系列</h4><p><code>JavaScript(ES6) code snippets</code>es6代码片段 <br /><code>Reactjs code snippets</code> React组件片段<br /><code>Typescript React code snippets</code> tsx的React组件片段<br><a name="F3kWo"></a></p><h4 id="导入系列"><a href="#导入系列" class="headerlink" title="导入系列"></a>导入系列</h4><p><code>Import Cost</code> 显示导入包大小<br /><code>Path Intellisence</code>智能路径提示（例如html文件中需要导入样式脚本文件）<br /><code>npm Intellisense</code>npm智能提示导入<br><a name="jUuYd"></a></p><h4 id="Vue系列"><a href="#Vue系列" class="headerlink" title="Vue系列"></a>Vue系列</h4><p><code>Vetur</code>开发vue2支持插件<br /><code>volar</code>开发vue3支持插件<br /><code>vueDX</code>vue类型检测 重命名和重构<br><a name="vCz0P"></a></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><hr><p><a name="HZ9I4"></a></p><h4 id="系统热键"><a href="#系统热键" class="headerlink" title="系统热键"></a>系统热键</h4><p>这是官方提供的 <a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf">快捷键速查表(opens new window)</a>，下面是中文快捷键说明。</p><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + Shift + P，F1</td><td>显示命令面板 Show Command Palette</td></tr><tr><td>Ctrl + P</td><td>快速打开 Quick Open</td></tr><tr><td>Ctrl + Shift + N</td><td>新窗口&#x2F;实例 New window&#x2F;instance</td></tr><tr><td>Ctrl + Shift + W</td><td>关闭窗口&#x2F;实例 Close window&#x2F;instance</td></tr></tbody></table><p><a name="PLgzr"></a></p><h4 id="基础编辑"><a href="#基础编辑" class="headerlink" title=" 基础编辑"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E5%9F%BA%E7%A1%80%E7%BC%96%E8%BE%91"> </a>基础编辑</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl+X</td><td>剪切行（空选定） Cut line (empty selection)</td></tr><tr><td>Ctrl+C</td><td>复制行（空选定）Copy line (empty selection)</td></tr><tr><td>Alt+ ↑ &#x2F; ↓</td><td>向上&#x2F;向下移动行 Move line up&#x2F;down</td></tr><tr><td>Shift+Alt + ↓ &#x2F; ↑</td><td>向上&#x2F;向下复制行 Copy line up&#x2F;down</td></tr><tr><td>Ctrl+Shift+K</td><td>删除行 Delete line</td></tr><tr><td>Ctrl+Enter</td><td>在下面插入行 Insert line below</td></tr><tr><td>Ctrl+Shift+Enter</td><td>在上面插入行 Insert line above</td></tr><tr><td>Ctrl+Shift+\</td><td>跳到匹配的括号 Jump to matching bracket</td></tr><tr><td>Ctrl+] &#x2F; [</td><td>缩进&#x2F;缩进行 Indent&#x2F;outdent line</td></tr><tr><td>Home</td><td>转到行首 Go to beginning of line</td></tr><tr><td>End</td><td>转到行尾 Go to end of line</td></tr><tr><td>Ctrl+Home</td><td>转到文件开头 Go to beginning of file</td></tr><tr><td>Ctrl+End</td><td>转到文件末尾 Go to end of file</td></tr><tr><td>Ctrl+↑ &#x2F; ↓</td><td>向上&#x2F;向下滚动行 Scroll line up&#x2F;down</td></tr><tr><td>Alt+PgUp &#x2F; PgDown</td><td>向上&#x2F;向下滚动页面 Scroll page up&#x2F;down</td></tr><tr><td>Ctrl+Shift+[</td><td>折叠（折叠）区域 Fold (collapse) region</td></tr><tr><td>Ctrl+Shift+]</td><td>展开（未折叠）区域 Unfold (uncollapse) region</td></tr><tr><td>Ctrl+K Ctrl+[</td><td>折叠（未折叠）所有子区域 Fold (collapse) all subregions</td></tr><tr><td>Ctrl+K Ctrl+]</td><td>展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td></tr><tr><td>Ctrl+K Ctrl+0</td><td>折叠（折叠）所有区域 Fold (collapse) all regions</td></tr><tr><td>Ctrl+K Ctrl+J</td><td>展开（未折叠）所有区域 Unfold (uncollapse) all regions</td></tr><tr><td>Ctrl+K Ctrl+C</td><td>添加行注释 Add line comment</td></tr><tr><td>Ctrl+K Ctrl+U</td><td>删除行注释 Remove line comment</td></tr><tr><td>Ctrl+&#x2F;</td><td>切换行注释 Toggle line comment</td></tr><tr><td>Shift+Alt+A</td><td>切换块注释 Toggle block comment</td></tr><tr><td>Alt+Z</td><td>切换换行 Toggle word wrap</td></tr><tr><td>Ctrl+Alt</td><td>键盘上向上或者向下键，使一列上出现多个光标</td></tr><tr><td>Ctrl+Shift+l</td><td>选择相同的词统一编辑</td></tr><tr><td>Shift+Alt+鼠标拖动</td><td>选择区域进行编辑</td></tr></tbody></table><p><a name="nHpd3"></a></p><h4 id="导航控制"><a href="#导航控制" class="headerlink" title=" 导航控制"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E5%AF%BC%E8%88%AA%E6%8E%A7%E5%88%B6"> </a>导航控制</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + T</td><td>显示所有符号 Show all Symbols</td></tr><tr><td>Ctrl + G</td><td>转到行… Go to Line…</td></tr><tr><td>Ctrl + P</td><td>转到文件… Go to File…</td></tr><tr><td>Ctrl + Shift + O</td><td>转到符号… Go to Symbol…</td></tr><tr><td>Ctrl + Shift + M</td><td>显示问题面板 Show Problems panel</td></tr><tr><td>F8</td><td>转到下一个错误或警告 Go to next error or warning</td></tr><tr><td>Shift + F8</td><td>转到上一个错误或警告 Go to previous error or warning</td></tr><tr><td>Ctrl + Shift + Tab</td><td>导航编辑器组历史记录 Navigate editor group history</td></tr><tr><td>Alt + ←&#x2F;→</td><td>返回&#x2F;前进 Go back &#x2F; forward</td></tr><tr><td>Ctrl + M</td><td>切换选项卡移动焦点 Toggle Tab moves focus</td></tr></tbody></table><p><a name="BsYp3"></a></p><h4 id="搜索和替换"><a href="#搜索和替换" class="headerlink" title=" 搜索和替换"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E6%90%9C%E7%B4%A2%E5%92%8C%E6%9B%BF%E6%8D%A2"> </a>搜索和替换</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + F</td><td>查找 Find</td></tr><tr><td>Ctrl + H</td><td>替换 Replace</td></tr><tr><td>F3 &#x2F; Shift + F3</td><td>查找下一个&#x2F;上一个 Find next&#x2F;previous</td></tr><tr><td>Alt + Enter</td><td>选择查找匹配的所有出现 Select all occurences of Find match</td></tr><tr><td>Ctrl + D</td><td>将选择添加到下一个查找匹配 Add selection to next Find match</td></tr><tr><td>Ctrl + K Ctrl + D</td><td>将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td></tr><tr><td>Alt + C &#x2F; R &#x2F; W</td><td>切换区分大小写&#x2F;正则表达式&#x2F;整个词 Toggle case-sensitive &#x2F; regex &#x2F; whole word</td></tr></tbody></table><p><a name="imaLL"></a></p><h4 id="多光标和选择"><a href="#多光标和选择" class="headerlink" title=" 多光标和选择"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E5%A4%9A%E5%85%89%E6%A0%87%E5%92%8C%E9%80%89%E6%8B%A9"> </a>多光标和选择</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Alt +单击</td><td>插入光标 Insert cursor</td></tr><tr><td>Ctrl + Alt +↑&#x2F;↓</td><td>在上&#x2F;下插入光标 Insert cursor above &#x2F; below</td></tr><tr><td>Ctrl + U</td><td>撤消上一个光标操作 Undo last cursor operation</td></tr><tr><td>Shift + Alt + I</td><td>在选定的每一行的末尾插入光标 Insert cursor at end of each line selected</td></tr><tr><td>Ctrl + I</td><td>选择当前行 Select current line</td></tr><tr><td>Ctrl + Shift + L</td><td>选择当前选择的所有出现 Select all occurrences of current selection</td></tr><tr><td>Ctrl + F2</td><td>选择当前字的所有出现 Select all occurrences of current word</td></tr><tr><td>Shift + Alt + →</td><td>展开选择 Expand selection</td></tr><tr><td>Shift + Alt + ←</td><td>缩小选择 Shrink selection</td></tr><tr><td>Shift + Alt + （拖动鼠标）</td><td>列（框）选择 Column (box) selection</td></tr><tr><td>Ctrl + Shift + Alt +（箭头键）</td><td>列（框）选择 Column (box) selection</td></tr><tr><td>Ctrl + Shift + Alt + PgUp &#x2F; PgDown</td><td>列（框）选择页上&#x2F;下 Column (box) selection page up&#x2F;down</td></tr><tr><td>zc</td><td>折叠代码块</td></tr><tr><td>zo</td><td>展开代码块</td></tr><tr><td>zC</td><td>折叠所有代码块</td></tr><tr><td>zO</td><td>展开所有代码块</td></tr></tbody></table><p><a name="NaaOI"></a></p><h4 id="语言编辑"><a href="#语言编辑" class="headerlink" title=" 语言编辑"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E8%AF%AD%E8%A8%80%E7%BC%96%E8%BE%91"> </a>语言编辑</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl + 空格</td><td>触发建议 Trigger suggestion</td></tr><tr><td>Ctrl + Shift + Space</td><td>触发器参数提示 Trigger parameter hints</td></tr><tr><td>Tab</td><td>Emmet 展开缩写 Emmet expand abbreviation</td></tr><tr><td>Shift + Alt + F</td><td>格式化文档 Format document</td></tr><tr><td>Ctrl + K Ctrl + F</td><td>格式选定区域 Format selection</td></tr><tr><td>F12</td><td>转到定义 Go to Definition</td></tr><tr><td>Alt + F12</td><td>Peek定义 Peek Definition</td></tr><tr><td>Ctrl + K F12</td><td>打开定义到边 Open Definition to the side</td></tr><tr><td>Ctrl + .</td><td>快速解决 Quick Fix</td></tr><tr><td>Shift + F12</td><td>显示引用 Show References</td></tr><tr><td>F2</td><td>重命名符号 Rename Symbol</td></tr><tr><td>Ctrl + Shift + . &#x2F;，</td><td>替换为下一个&#x2F;上一个值 Replace with next&#x2F;previous value</td></tr><tr><td>Ctrl + K Ctrl + X</td><td>修剪尾随空格 Trim trailing whitespace</td></tr><tr><td>Ctrl + K M</td><td>更改文件语言 Change file language</td></tr></tbody></table><p><a name="ZaDNK"></a></p><h4 id="窗口管理"><a href="#窗口管理" class="headerlink" title=" 窗口管理"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86"> </a>窗口管理</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl+F4, Ctrl+W</td><td>关闭编辑器 Close editor</td></tr><tr><td>Ctrl+K F</td><td>关闭文件夹 Close folder</td></tr><tr><td>Ctrl+\</td><td>拆分编辑器 Split editor</td></tr><tr><td>Ctrl+ 1 &#x2F; 2 &#x2F; 3</td><td>聚焦到第1，第2或第3编辑器组 Focus into 1st, 2nd or 3rd editor group</td></tr><tr><td>Ctrl+K Ctrl+ ←&#x2F;→</td><td>聚焦到上一个&#x2F;下一个编辑器组 Focus into previous&#x2F;next editor group</td></tr><tr><td>Ctrl+Shift+PgUp &#x2F; PgDown</td><td>向左&#x2F;向右移动编辑器 Move editor left&#x2F;right</td></tr><tr><td>Ctrl+K ← &#x2F; →</td><td>移动活动编辑器组 Move active editor group</td></tr></tbody></table><p><a name="lthFG"></a></p><h4 id="文件管理"><a href="#文件管理" class="headerlink" title=" 文件管理"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"> </a>文件管理</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl+N</td><td>新文件 New File</td></tr><tr><td>Ctrl+O</td><td>打开文件… Open File…</td></tr><tr><td>Ctrl+S</td><td>保存 Save</td></tr><tr><td>Ctrl+Shift+S</td><td>另存为… Save As…</td></tr><tr><td>Ctrl+K S</td><td>全部保存 Save All</td></tr><tr><td>Ctrl+F4</td><td>关闭 Close</td></tr><tr><td>Ctrl+K Ctrl+W</td><td>关闭所有 Close All</td></tr><tr><td>Ctrl+Shift+T</td><td>重新打开关闭的编辑器 Reopen closed editor</td></tr><tr><td>Ctrl+K</td><td>输入保持打开 Enter Keep Open</td></tr><tr><td>Ctrl+Tab</td><td>打开下一个 Open next</td></tr><tr><td>Ctrl+Shift+Tab</td><td>打开上一个 Open previous</td></tr><tr><td>Ctrl+K P</td><td>复制活动文件的路径 Copy path of active file</td></tr><tr><td>Ctrl+K R</td><td>显示资源管理器中的活动文件 Reveal active file in Explorer</td></tr><tr><td>Ctrl+K O</td><td>显示新窗口&#x2F;实例中的活动文件 Show active file in new window&#x2F;instance</td></tr></tbody></table><p><a name="DG23k"></a></p><h4 id="显示控制"><a href="#显示控制" class="headerlink" title=" 显示控制"></a><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E6%98%BE%E7%A4%BA%E6%8E%A7%E5%88%B6"> </a>显示控制</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>F11</td><td>切换全屏 Toggle full screen</td></tr><tr><td>Shift+Alt+1</td><td>切换编辑器布局 Toggle editor layout</td></tr><tr><td>Ctrl+ &#x3D; &#x2F; -</td><td>放大&#x2F;缩小 Zoom in&#x2F;out</td></tr><tr><td>Ctrl+B</td><td>切换侧栏可见性 Toggle Sidebar visibility</td></tr><tr><td>Ctrl+Shift+E</td><td>显示浏览器&#x2F;切换焦点 Show Explorer &#x2F; Toggle focus</td></tr><tr><td>Ctrl+Shift+F</td><td>显示搜索 Show Search</td></tr><tr><td>Ctrl+Shift+G</td><td>显示Git Show Git</td></tr><tr><td>Ctrl+Shift+D</td><td>显示调试 Show Debug</td></tr><tr><td>Ctrl+Shift+X</td><td>显示扩展 Show Extensions</td></tr><tr><td>Ctrl+Shift+H</td><td>替换文件 Replace in files</td></tr><tr><td>Ctrl+Shift+J</td><td>切换搜索详细信息 Toggle Search details</td></tr><tr><td>Ctrl+Shift+C</td><td>打开新命令提示符&#x2F;终端 Open new command prompt&#x2F;terminal</td></tr><tr><td>Ctrl+Shift+U</td><td>显示输出面板 Show Output panel</td></tr><tr><td>Ctrl+Shift+V</td><td>切换Markdown预览 Toggle Markdown preview</td></tr><tr><td>Ctrl+K V</td><td>从旁边打开Markdown预览 Open Markdown preview to the side</td></tr></tbody></table><p><a name="JpIxB"></a></p><h4 id="代码调试"><a href="#代码调试" class="headerlink" title="代码调试"></a>代码调试</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>F9</td><td>切换断点 Toggle breakpoint</td></tr><tr><td>F5</td><td>开始&#x2F;继续 Start&#x2F;Continue</td></tr><tr><td>Shift+F5</td><td>停止 Stop</td></tr><tr><td>F11 &#x2F; Shift+F11</td><td>下一步&#x2F;上一步 Step into&#x2F;out</td></tr><tr><td>F10</td><td>跳过 Step over</td></tr><tr><td>Ctrl+K Ctrl+I</td><td>显示悬停 Show hover</td></tr></tbody></table><p><a name="ET2cM"></a></p><h4 id="集成终端"><a href="#集成终端" class="headerlink" title="集成终端"></a>集成终端</h4><table><thead><tr><th>按 Press</th><th>功能 Function</th></tr></thead><tbody><tr><td>Ctrl+&#96;</td><td>显示集成终端 Show integrated terminal</td></tr><tr><td>Ctrl+Shift+&#96;</td><td>创建新终端 Create new terminal</td></tr><tr><td>Ctrl+Shift+C</td><td>复制选定 Copy selection</td></tr><tr><td>Ctrl+Shift+V</td><td>粘贴到活动端子 Paste into active terminal</td></tr><tr><td>Ctrl+↑ &#x2F; ↓</td><td>向上&#x2F;向下滚动 Scroll up&#x2F;down</td></tr><tr><td>Shift+PgUp &#x2F; PgDown</td><td>向上&#x2F;向下滚动页面 Scroll page up&#x2F;down</td></tr><tr><td>Ctrl+Home &#x2F; End</td><td>滚动到顶部&#x2F;底部 Scroll to top&#x2F;bottom</td></tr></tbody></table><p><a name="bOelZ"></a></p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><hr><p><a name="Dr27T"></a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><hr><p>更多调试配置项查看：<br /><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80">https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html %E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80</a><br><a name="Phzoy"></a></p><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><hr><p><a href="https://vscode.cool/">https://vscode.cool/</a><br /><a href="https://cloud.tencent.com/developer/article/1796162">https://cloud.tencent.com/developer/article/1796162</a> *<br /><a href="https://www.php.cn/tool/vscode/">https://www.php.cn/tool/vscode/</a>  *<br /><a href="https://aijishu.com/a/1060000000094032">https://aijishu.com/a/1060000000094032</a><br /><a href="https://www.runoob.com/w3cnote/vscode-tutorial.html">https://www.runoob.com/w3cnote/vscode-tutorial.html</a><br /><a href="https://www.axihe.com/tools/vscode/skill/vscode-add-code-comments.html">https://www.axihe.com/tools/vscode/skill/vscode-add-code-comments.html</a> *<br /><a href="https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html#%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80">https://doc.houdunren.com/vscode/1%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html %E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80</a></p>]]></content>
      
      
      <categories>
          
          <category> 效率工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>yarn</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/yarn/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/yarn/</url>
      
        <content type="html"><![CDATA[<h2 id="YARN是什么"><a href="#YARN是什么" class="headerlink" title="YARN是什么"></a>YARN是什么</h2><hr><p>Yarn 是 Facebook, Google, Exponent 和 Tilde 开发的一款新的 JavaScript 包管理工具。 你可以通过它使用全世界开发者的代码，或者分享自己的代码。代码通过包（package）（或者称为模块（module））的方式来共享。 一个包里包含所有需要共享的代码，以及描述包信息的文件，称为package.json。它的优点是更快、更安全、更可靠。它的主要特性有离线模式、确定性、网络性能、多注册、网络恢复能力、扁平模式以及 Emoji。就像我们可以从官方文档了解那样，它的目的是解决这些团队使用 npm 面临的少数问题.<br><a name="Sst42"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a><br />官网指引</h2><hr><p>中文：<a href="https://yarn.bootcss.com/">https://yarn.bootcss.com/</a><br />英文：<a href="https://classic.yarnpkg.com/en/docs/install#windows-stable">https://classic.yarnpkg.com/en/docs/install#windows-stable</a><br><a name="K3F9g"></a></p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><hr><p>快速：Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。<br />可靠：使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。<br />安全：在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。<br><a name="x2CsK"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p><a name="BGC1w"></a></p><h3 id="在window上安装"><a href="#在window上安装" class="headerlink" title="在window上安装"></a>在window上安装</h3><ul><li>下载安装包安装</li></ul><p><a href="https://link.juejin.cn/?target=https://classic.yarnpkg.com/latest.msi">点我下载Yarn安装包</a>，你将下载到一个 .msi文件，当它运行时会指引你将 Yarn 安装到 Windows 上。如果你使用此安装程序，需要先安装 <a href="https://link.juejin.cn/?target=https://nodejs.org/">Node.js</a>。</p><ul><li>通过Chocolatey安装</li></ul><p><a href="https://link.juejin.cn/?target=https://chocolatey.org/">Chocolatey</a> 是一个 Windows 专用的软件包管理工具。 请按照此 <a href="https://link.juejin.cn/?target=https://chocolatey.org/install">说明</a> 安装 Chocolatey 。安装 Chocolatey 之后，你就可以在控制台执行如下命令安装 Yarn 了</p><blockquote><p>choco install yarn </p></blockquote><ul><li>通过 Scoop 安装</li></ul><p><a href="https://link.juejin.cn/?target=http://scoop.sh/">Scoop</a> 是一个用于 Windows 的基于命令行的安装工具。 请按照此 <a href="https://link.juejin.cn/?target=https://github.com/lukesampson/scoop/wiki/Quick-Start">说明</a> 安装 Scoop 。Scoop 安装后，你就可以在控制台执行如下命令安装 Yarn 了</p><blockquote><p>scoop install yarn </p></blockquote><p><a name="sp3WV"></a></p><h3 id="在linux上安装"><a href="#在linux上安装" class="headerlink" title="在linux上安装"></a>在linux上安装</h3><ul><li><p>官网脚本执行安装</p><blockquote><p>curl -o- -L <a href="https://yarnpkg.com/install.sh">https://yarnpkg.com/install.sh</a> | bash -s – –nightly </p></blockquote></li><li><p>通过npm安装</p><blockquote><p>npm install -g yarn</p></blockquote></li></ul><p><a name="lYfVd"></a></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><hr><p>【1】初始化新项目</p><blockquote><p>yarn init -y </p></blockquote><p>【2】添加依赖包</p><blockquote><p>yarn add [package] &#x2F;&#x2F; 会自动安装最新版本，会覆盖指定版本号<br>yarn add [package] [package] [package] &#x2F;&#x2F; 一次性添加多个包<br>yarn add [package]@[version] &#x2F;&#x2F; 添加指定版本的包<br>yarn add [package]@[tag] &#x2F;&#x2F; 安装某个tag（比如beta,next或者latest）  </p></blockquote><p>【3】将依赖项添加到不同依赖项类别<br />不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型分别添加到 devDependencies、peerDependencies 和 optionalDependencies</p><blockquote><p>yarn add [package] –dev 或 yarn add [package] -D &#x2F;&#x2F; 加到 devDependencies yarn add [package] –peer 或 yarn add [package] -P &#x2F;&#x2F; 加到 peerDependencies yarn add [package] –optional 或 yarn add [package] -O &#x2F;&#x2F; 加到 optionalDependencies  </p></blockquote><p>【4】升级依赖包</p><blockquote><p>yarn upgrade [package] &#x2F;&#x2F; 升级到最新版本<br> yarn upgrade [package]@[version] &#x2F;&#x2F; 升级到指定版本<br> yarn upgrade [package]@[tag] &#x2F;&#x2F; 升级到指定tag  </p></blockquote><p>【5】移除依赖包</p><blockquote><p>yarn remove [package] &#x2F;&#x2F; 移除包  </p></blockquote><p>【6】安装package.json里的包依赖，并将包及它的所有依赖项保存进yarn.lock</p><blockquote><p>yarn 或 yarn install &#x2F;&#x2F; 安装所有依赖<br>yarn install –flat &#x2F;&#x2F; 安装一个包的单一版本<br> yarn install –force &#x2F;&#x2F; 强制重新下载所有包<br>yarn install –production &#x2F;&#x2F; 只安装生产环境依赖  </p></blockquote><p>【7】发布包</p><blockquote><p>yarn publish  </p></blockquote><p>【8】运行脚本</p><blockquote><p>yarn run &#x2F;&#x2F; 用来执行在 package.json 中 scripts 属性下定义的脚本  </p></blockquote><p>【9】显示某个包的信息</p><blockquote><p>yarn info [package] &#x2F;&#x2F; 可以用来查看某个模块的最新版本信息  </p></blockquote><p>【10】缓存</p><blockquote><p>yarn cache<br>yarn cache list &#x2F;&#x2F; 列出已缓存的每个包<br>yarn cache dir &#x2F;&#x2F; 返回全局缓存位置<br>yarn cache clean &#x2F;&#x2F; 清除缓存</p></blockquote><p><a name="bMJZQ"></a></p><h2 id="npm-与-yarn相关比较"><a href="#npm-与-yarn相关比较" class="headerlink" title="npm 与 yarn相关比较"></a>npm 与 yarn相关比较</h2><hr><p>npm存在一些 <strong>历史遗留</strong>问题，请看下图：<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1427114/1643166233222-2ffd3f53-08c7-4433-96ea-d9d625321cfd.png#clientId=uc7358c1a-99aa-4&from=paste&id=ua21782ed&margin=%5Bobject%20Object%5D&originHeight=305&originWidth=647&originalType=url&ratio=1&status=done&style=none&taskId=u1ad4ef81-1c06-46ff-b9bc-408d535e732"></p><blockquote><p>比如说你的项目模块依赖是图中描述的，@1.2.1代表这个模块的版本。在你安装A的时候需要安装依赖C和D，很多依赖不会指定版本号，默认会安装最新的版本，这样就会出现问题：比如今天安装模块的时候C和D是某一个版本，而当以后C、D更新的时候，再次安装模块就会安装C和D的最新版本，如果新的版本无法兼容你的项目，你的程序可能就会出BUG，甚至无法运行。这就是npm的弊端，而yarn为了解决这个问题推出了yarn.lock的机制，这是作者项目中的yarn.lock文件。</p></blockquote><p><a name="U6Mq7"></a></p><h3 id="npm模块的依赖"><a href="#npm模块的依赖" class="headerlink" title="npm模块的依赖"></a>npm模块的依赖</h3><p>yarn.lock文件格式<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1427114/1643166253209-efb3ccbf-a445-4d8e-b17b-417e47c175a6.png#clientId=uc7358c1a-99aa-4&from=paste&id=u072a76a7&margin=%5Bobject%20Object%5D&originHeight=313&originWidth=955&originalType=url&ratio=1&status=done&style=none&taskId=u20ffbeab-7603-4ed1-bd2f-b1482ab3c84"></p><p>大家会看到，这个文件已经把依赖模块的版本号全部锁定，当你执行yarn install的时候，yarn会读取这个文件获得依赖的版本号，然后依照这个版本号去安装对应的依赖模块，这样依赖就会被锁定，以后再也不用担心版本号的问题了。其他人或者其他环境下使用的时候，把这个yarn.lock拷贝到相应的环境项目下再安装即可。<br />注意：这个文件不要手动修改它，当你使用一些操作如yarn add时，yarn会自动更新yarn.lock。<br><a name="uBfSh"></a></p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><hr><ol><li><strong>使用yrm工具管理一些npm源</strong></li></ol><p>安装</p><blockquote><p>yarn global add yrm</p></blockquote><p>查看可用源</p><blockquote><p>yrm ls</p></blockquote><p>选择源</p><blockquote><p>yrm use yarn</p></blockquote><ol start="2"><li><strong>快速删除node_modules 手动删除真的很慢：</strong></li></ol><p>安装： </p><blockquote><p>npm install rimraf -g</p></blockquote><p>使用：</p><blockquote><p>rimraf node_modules</p></blockquote><p>rimraf是node的一个包，可以快速删除node_modules，再也不用等半天了</p><p><a name="Aj9GL"></a></p><h2 id="yarn-和-npm-命令对比"><a href="#yarn-和-npm-命令对比" class="headerlink" title="yarn 和 npm 命令对比"></a>yarn 和 npm 命令对比</h2><table><thead><tr><th>NPM</th><th>Yarn</th><th>说明</th></tr></thead><tbody><tr><td>npm init</td><td>yarn init</td><td>初始化某个项目</td></tr><tr><td>npm install&#x2F;link</td><td>yarn install&#x2F;link</td><td>默认安装依赖</td></tr><tr><td>npm install taco –save</td><td>yarn add taco</td><td>安装某个依赖并默认保存到package</td></tr><tr><td>npm uninstall taco –save</td><td>yarn remove taco</td><td>移除某个依赖</td></tr><tr><td>npm install taco –save -dev</td><td>yarn add taco -dev</td><td>安装某个开发时的依赖</td></tr><tr><td>npm update taco –save</td><td>yarn upgrade taco</td><td>更新某个依赖项目</td></tr><tr><td>npm install taco –global</td><td>yarn global add taco</td><td>安装某个全局依赖项目</td></tr><tr><td>npm publish&#x2F;login&#x2F;logout</td><td>yarn publish&#x2F;login&#x2F;logout</td><td>发布&#x2F;登录&#x2F;退出</td></tr><tr><td>npm run&#x2F;test</td><td>yarn run&#x2F;test</td><td>运行某个命令</td></tr></tbody></table><hr><p><br />相关网站<br /><a href="https://www.cnblogs.com/bingcola/p/15183634.html">https://www.cnblogs.com/bingcola/p/15183634.html</a><br /><a href="https://blog.csdn.net/yw00yw/article/details/81354533">https://blog.csdn.net/yw00yw/article/details/81354533</a><br /><a href="https://www.jianshu.com/p/0657050f29ff">https://www.jianshu.com/p/0657050f29ff</a></p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>eslint</title>
      <link href="/dushenyan-share-record-blog.github.io/2022/07/31/eslint/"/>
      <url>/dushenyan-share-record-blog.github.io/2022/07/31/eslint/</url>
      
        <content type="html"><![CDATA[<p><a name="njHFN"></a></p><h2 id="ESLINT是什么"><a href="#ESLINT是什么" class="headerlink" title="ESLINT是什么"></a>ESLINT是什么</h2><hr><p>ESlint是一个开源的 JavaScript 代码检查工具，使用 Node.js 编写，由 Nicholas C. Zakas 于 2013 年 6 月创建。ESLint 的初衷是为了让程序员可以创建自己的检测规则，使其可以在编码的过程中发现问题而不是在执行的过程中。ESLint 的所有规则都被设计成可插入的，为了方便使用，ESLint 内置了一些规则，在这基础上也可以增加自定义规则。</p><p><a name="MwVeq"></a></p><h2 id="官网指引"><a href="#官网指引" class="headerlink" title="官网指引"></a>官网指引</h2><hr><p>中文官网：<a href="http://eslint.cn/">http://eslint.cn/</a><br />配置官网：<a href="http://eslint.cn/docs/user-guide/configuring">http://eslint.cn/docs/user-guide/configuring</a><br />规则官网：<a href="http://eslint.cn/docs/rules/">http://eslint.cn/docs/rules/</a><br><a name="G2PEu"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><p>如果你仅仅想让 ESLint 成为你项目构建系统的一部分，我们可以在项目根目录进行本地安装：</p><blockquote><p>npm install eslint –save-dev</p></blockquote><p>如果想使 ESLint 适用于你所有的项目，我们建议使用全局安装，使用全局安装 ESLint 后，你使用的任何 ESLint 插件或可分享的配置也都必须在全局安装。<br />这里我们使用全局安装：</p><blockquote><p>npm install -g eslint</p></blockquote><p>安装完毕后，我们使用 eslint –init 命令在用户目录中生成一个配置文件（也可以在任何你喜欢的位置进行生成）<br />我们在第一个选项中选择自定义代码风格，之后根据需要自行选择。<br />设置完成后我们会得到一份文件名为 .eslintrc.js 的配置文件。<br><a name="HQXm3"></a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><hr><p>下面对<code>.eslintrc.js</code>文件进行讲解<br />默认配置 如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;browser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;commonjs&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;es6&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;extends&quot;</span>: <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parserOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;sourceType&quot;</span>: <span class="string">&quot;module&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;indent&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="number">4</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;linebreak-style&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="string">&quot;windows&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;quotes&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="string">&quot;single&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;semi&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="string">&quot;never&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>接着我们来对其自定义修改<br /><strong>配置环境</strong><br />在上文生成的配置文件中可以使用 env 属性来指定要启用的环境，将其设置为 true，以保证在进行代码检测时不会把<a href="http://eslint.cn/docs/user-guide/configuring#specifying-environments">这些环境</a>预定义的全局变量识别成未定义的变量而报错：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;browser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;commonjs&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;es6&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;jquery&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>设置语言项</strong><br />默认情况下，ESLint 支持 ECMAScript 5 语法，如果你想启用对 ECMAScript 其它版本和 JSX 等的支持，ESLint 允许你使用 parserOptions 属性进行指定想要支持的 JavaScript <a href="http://eslint.cn/docs/user-guide/configuring#specifying-parser-options">语言选项</a>，不过你可能需要自行安装 eslint-plugin-react 等插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;parserOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;ecmaVersion&quot;</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">&quot;sourceType&quot;</span>: <span class="string">&quot;module&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ecmaFeatures&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;jsx&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置规则</strong><br />在上文的配置文件中**， “extends”: “eslint:recommended” **选项表示启用推荐规则，在推荐规则的基础上我们还可以根据需要使用 <strong>rules</strong> 新增自定义规则，每个规则的第一个值都是代表该规则检测后显示的错误级别：</p><ul><li><strong>“off”</strong> 或** 0 **- 关闭规则</li><li>**”warn” **或 <strong>1</strong> - 将规则视为一个警告</li><li><strong>“error”</strong> 或 <strong>2</strong> - 将规则视为一个错误</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;rules&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;indent&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="number">4</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;linebreak-style&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="string">&quot;windows&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;quotes&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="string">&quot;single&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;semi&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="string">&quot;never&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中带 √ 标记的表示该规则为推荐规则<br><a name="oNzY8"></a></p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><hr><p>首先，打开 VSCode 扩展面板并搜索 ESLint 扩展，然后点击安装<br />安装完毕之后点击<code> 重新加载</code> 以激活扩展，但想要让扩展进行工作，我们还需要先进行 ESLint 的<code>安装配置</code>。<br><a name="VVAJo"></a></p><h4 id="在vscode中使用"><a href="#在vscode中使用" class="headerlink" title="在vscode中使用"></a>在vscode中使用</h4><p>继续回到 VSCode 进行扩展设置，依次点击 <strong>文件 &gt; 首选项 &gt; 设置</strong> 打开 VSCode 配置文件<br />从左侧系统设置中可以看到，ESLint 扩展默认已经启用，我们现在只需在右侧用户设置中添加配置来指定我们创建的 <strong>.eslintrc.js</strong>配置文件路径即可启用自定义规则检测，ESLint 会查找并自动读取它们：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;eslint.options&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;configFile&quot;</span>: <span class="string">&quot;E:/git/github/styleguide/eslint/.eslintrc.js&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>至此，我们已经可以使用 ESLint 扩展来检测我们的 js 文件了<br><a name="MuWmv"></a></p><h4 id="让-ESLint-支持-Vue-单文件组件"><a href="#让-ESLint-支持-Vue-单文件组件" class="headerlink" title="让 ESLint 支持 Vue 单文件组件"></a>让 ESLint 支持 Vue 单文件组件</h4><p>由于 ESLint 默认只支持 js 文件的脚本检测，如果我们需要支持类 html 文件（如 vue）的内联脚本检测，还需要安装 eslint-plugin-html 插件。<br />因为我们使用全局安装了 ESLint，所以 <strong>eslint-plugin-html</strong> 插件也必须进行全局安装：</p><blockquote><p>npm install -g eslint-plugin-html</p></blockquote><p>安装完成后，我们再次打开 <strong>文件 &gt; 首选项 &gt; 设置</strong>，在右侧用户设置中修改 ESLint 的相关配置并保存：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;eslint.options&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;configFile&quot;</span>: <span class="string">&quot;E:/git/github/styleguide/eslint/.eslintrc.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [<span class="string">&quot;html&quot;</span>]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;eslint.validate&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">    <span class="string">&quot;javascriptreact&quot;</span>,</span><br><span class="line">    <span class="string">&quot;html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vue&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>最后，我们打开一个 vue 文件，可以发现 ESLint 扩展已经正常工作了<br><a name="WPYFI"></a></p><h2 id="配置指引"><a href="#配置指引" class="headerlink" title="配置指引"></a>配置指引</h2><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;no-alert&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用alert confirm prompt</span></span><br><span class="line"><span class="string">&quot;no-array-constructor&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用数组构造器</span></span><br><span class="line"><span class="string">&quot;no-bitwise&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用按位运算符</span></span><br><span class="line"><span class="string">&quot;no-caller&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止使用arguments.caller或arguments.callee</span></span><br><span class="line"><span class="string">&quot;no-catch-shadow&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止catch子句参数与外部作用域变量同名</span></span><br><span class="line"><span class="string">&quot;no-class-assign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止给类赋值</span></span><br><span class="line"><span class="string">&quot;no-cond-assign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止在条件表达式中使用赋值语句</span></span><br><span class="line"><span class="string">&quot;no-console&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用console</span></span><br><span class="line"><span class="string">&quot;no-const-assign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止修改const声明的变量</span></span><br><span class="line"><span class="string">&quot;no-constant-condition&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止在条件中使用常量表达式 if(true) if(1)</span></span><br><span class="line"><span class="string">&quot;no-continue&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用continue</span></span><br><span class="line"><span class="string">&quot;no-control-regex&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止在正则表达式中使用控制字符</span></span><br><span class="line"><span class="string">&quot;no-debugger&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用debugger</span></span><br><span class="line"><span class="string">&quot;no-delete-var&quot;</span>: <span class="number">2</span>,<span class="comment">//不能对var声明的变量使用delete操作符</span></span><br><span class="line"><span class="string">&quot;no-div-regex&quot;</span>: <span class="number">1</span>,<span class="comment">//不能使用看起来像除法的正则表达式/=foo/</span></span><br><span class="line"><span class="string">&quot;no-dupe-keys&quot;</span>: <span class="number">2</span>,<span class="comment">//在创建对象字面量时不允许键重复 &#123;a:1,a:1&#125;</span></span><br><span class="line"><span class="string">&quot;no-dupe-args&quot;</span>: <span class="number">2</span>,<span class="comment">//函数参数不能重复</span></span><br><span class="line"><span class="string">&quot;no-duplicate-case&quot;</span>: <span class="number">2</span>,<span class="comment">//switch中的case标签不能重复</span></span><br><span class="line"><span class="string">&quot;no-else-return&quot;</span>: <span class="number">2</span>,<span class="comment">//如果if语句里面有return,后面不能跟else语句</span></span><br><span class="line"><span class="string">&quot;no-empty&quot;</span>: <span class="number">2</span>,<span class="comment">//块语句中的内容不能为空</span></span><br><span class="line"><span class="string">&quot;no-empty-character-class&quot;</span>: <span class="number">2</span>,<span class="comment">//正则表达式中的[]内容不能为空</span></span><br><span class="line"><span class="string">&quot;no-empty-label&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用空label</span></span><br><span class="line"><span class="string">&quot;no-eq-null&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止对null使用==或!=运算符</span></span><br><span class="line"><span class="string">&quot;no-eval&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止使用eval</span></span><br><span class="line"><span class="string">&quot;no-ex-assign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止给catch语句中的异常参数赋值</span></span><br><span class="line"><span class="string">&quot;no-extend-native&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止扩展native对象</span></span><br><span class="line"><span class="string">&quot;no-extra-bind&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的函数绑定</span></span><br><span class="line"><span class="string">&quot;no-extra-boolean-cast&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的bool转换</span></span><br><span class="line"><span class="string">&quot;no-extra-parens&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止非必要的括号</span></span><br><span class="line"><span class="string">&quot;no-extra-semi&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止多余的冒号</span></span><br><span class="line"><span class="string">&quot;no-fallthrough&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止switch穿透</span></span><br><span class="line"><span class="string">&quot;no-floating-decimal&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止省略浮点数中的0 .5 3.</span></span><br><span class="line"><span class="string">&quot;no-func-assign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止重复的函数声明</span></span><br><span class="line"><span class="string">&quot;no-implicit-coercion&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止隐式转换</span></span><br><span class="line"><span class="string">&quot;no-implied-eval&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用隐式eval</span></span><br><span class="line"><span class="string">&quot;no-inline-comments&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止行内备注</span></span><br><span class="line"><span class="string">&quot;no-inner-declarations&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;functions&quot;</span>],<span class="comment">//禁止在块语句中使用声明（变量或函数）</span></span><br><span class="line"><span class="string">&quot;no-invalid-regexp&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止无效的正则表达式</span></span><br><span class="line"><span class="string">&quot;no-invalid-this&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止无效的this，只能用在构造器，类，对象字面量</span></span><br><span class="line"><span class="string">&quot;no-irregular-whitespace&quot;</span>: <span class="number">2</span>,<span class="comment">//不能有不规则的空格</span></span><br><span class="line"><span class="string">&quot;no-iterator&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用__iterator__ 属性</span></span><br><span class="line"><span class="string">&quot;no-label-var&quot;</span>: <span class="number">2</span>,<span class="comment">//label名不能与var声明的变量名相同</span></span><br><span class="line"><span class="string">&quot;no-labels&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止标签声明</span></span><br><span class="line"><span class="string">&quot;no-lone-blocks&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的嵌套块</span></span><br><span class="line"><span class="string">&quot;no-lonely-if&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止else语句内只有if语句</span></span><br><span class="line"><span class="string">&quot;no-loop-func&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span><br><span class="line"><span class="string">&quot;no-mixed-requires&quot;</span>: [<span class="number">0</span>, <span class="literal">false</span>],<span class="comment">//声明时不能混用声明类型</span></span><br><span class="line"><span class="string">&quot;no-mixed-spaces-and-tabs&quot;</span>: [<span class="number">2</span>, <span class="literal">false</span>],<span class="comment">//禁止混用tab和空格</span></span><br><span class="line"><span class="string">&quot;linebreak-style&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;windows&quot;</span>],<span class="comment">//换行风格</span></span><br><span class="line"><span class="string">&quot;no-multi-spaces&quot;</span>: <span class="number">1</span>,<span class="comment">//不能用多余的空格</span></span><br><span class="line"><span class="string">&quot;no-multi-str&quot;</span>: <span class="number">2</span>,<span class="comment">//字符串不能用\换行</span></span><br><span class="line"><span class="string">&quot;no-multiple-empty-lines&quot;</span>: [<span class="number">1</span>, &#123;<span class="string">&quot;max&quot;</span>: <span class="number">2</span>&#125;],<span class="comment">//空行最多不能超过2行</span></span><br><span class="line"><span class="string">&quot;no-native-reassign&quot;</span>: <span class="number">2</span>,<span class="comment">//不能重写native对象</span></span><br><span class="line"><span class="string">&quot;no-negated-in-lhs&quot;</span>: <span class="number">2</span>,<span class="comment">//in 操作符的左边不能有!</span></span><br><span class="line"><span class="string">&quot;no-nested-ternary&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用嵌套的三目运算</span></span><br><span class="line"><span class="string">&quot;no-new&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止在使用new构造一个实例后不赋值</span></span><br><span class="line"><span class="string">&quot;no-new-func&quot;</span>: <span class="number">1</span>,<span class="comment">//禁止使用new Function</span></span><br><span class="line"><span class="string">&quot;no-new-object&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用new Object()</span></span><br><span class="line"><span class="string">&quot;no-new-require&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用new require</span></span><br><span class="line"><span class="string">&quot;no-new-wrappers&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用new创建包装实例，new String new Boolean new Number</span></span><br><span class="line"><span class="string">&quot;no-obj-calls&quot;</span>: <span class="number">2</span>,<span class="comment">//不能调用内置的全局对象，比如Math() JSON()</span></span><br><span class="line"><span class="string">&quot;no-octal&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用八进制数字</span></span><br><span class="line"><span class="string">&quot;no-octal-escape&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用八进制转义序列</span></span><br><span class="line"><span class="string">&quot;no-param-reassign&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止给参数重新赋值</span></span><br><span class="line"><span class="string">&quot;no-path-concat&quot;</span>: <span class="number">0</span>,<span class="comment">//node中不能使用__dirname或__filename做路径拼接</span></span><br><span class="line"><span class="string">&quot;no-plusplus&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用++，--</span></span><br><span class="line"><span class="string">&quot;no-process-env&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用process.env</span></span><br><span class="line"><span class="string">&quot;no-process-exit&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用process.exit()</span></span><br><span class="line"><span class="string">&quot;no-proto&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止使用__proto__属性</span></span><br><span class="line"><span class="string">&quot;no-redeclare&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止重复声明变量</span></span><br><span class="line"><span class="string">&quot;no-regex-spaces&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span><br><span class="line"><span class="string">&quot;no-restricted-modules&quot;</span>: <span class="number">0</span>,<span class="comment">//如果禁用了指定模块，使用就会报错</span></span><br><span class="line"><span class="string">&quot;no-return-assign&quot;</span>: <span class="number">1</span>,<span class="comment">//return 语句中不能有赋值表达式</span></span><br><span class="line"><span class="string">&quot;no-script-url&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用javascript:void(0)</span></span><br><span class="line"><span class="string">&quot;no-self-compare&quot;</span>: <span class="number">2</span>,<span class="comment">//不能比较自身</span></span><br><span class="line"><span class="string">&quot;no-sequences&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用逗号运算符</span></span><br><span class="line"><span class="string">&quot;no-shadow&quot;</span>: <span class="number">2</span>,<span class="comment">//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span><br><span class="line"><span class="string">&quot;no-shadow-restricted-names&quot;</span>: <span class="number">2</span>,<span class="comment">//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span><br><span class="line"><span class="string">&quot;no-spaced-func&quot;</span>: <span class="number">2</span>,<span class="comment">//函数调用时 函数名与()之间不能有空格</span></span><br><span class="line"><span class="string">&quot;no-sparse-arrays&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止稀疏数组， [1,,2]</span></span><br><span class="line"><span class="string">&quot;no-sync&quot;</span>: <span class="number">0</span>,<span class="comment">//nodejs 禁止同步方法</span></span><br><span class="line"><span class="string">&quot;no-ternary&quot;</span>: <span class="number">0</span>,<span class="comment">//禁止使用三目运算符</span></span><br><span class="line"><span class="string">&quot;no-trailing-spaces&quot;</span>: <span class="number">1</span>,<span class="comment">//一行结束后面不要有空格</span></span><br><span class="line"><span class="string">&quot;no-this-before-super&quot;</span>: <span class="number">0</span>,<span class="comment">//在调用super()之前不能使用this或super</span></span><br><span class="line"><span class="string">&quot;no-throw-literal&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止抛出字面量错误 throw &quot;error&quot;;</span></span><br><span class="line"><span class="string">&quot;no-undef&quot;</span>: <span class="number">1</span>,<span class="comment">//不能有未定义的变量</span></span><br><span class="line"><span class="string">&quot;no-undef-init&quot;</span>: <span class="number">2</span>,<span class="comment">//变量初始化时不能直接给它赋值为undefined</span></span><br><span class="line"><span class="string">&quot;no-undefined&quot;</span>: <span class="number">2</span>,<span class="comment">//不能使用undefined</span></span><br><span class="line"><span class="string">&quot;no-unexpected-multiline&quot;</span>: <span class="number">2</span>,<span class="comment">//避免多行表达式</span></span><br><span class="line"><span class="string">&quot;no-underscore-dangle&quot;</span>: <span class="number">1</span>,<span class="comment">//标识符不能以_开头或结尾</span></span><br><span class="line"><span class="string">&quot;no-unneeded-ternary&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span><br><span class="line"><span class="string">&quot;no-unreachable&quot;</span>: <span class="number">2</span>,<span class="comment">//不能有无法执行的代码</span></span><br><span class="line"><span class="string">&quot;no-unused-expressions&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止无用的表达式</span></span><br><span class="line"><span class="string">&quot;no-unused-vars&quot;</span>: [<span class="number">2</span>, &#123;<span class="string">&quot;vars&quot;</span>: <span class="string">&quot;all&quot;</span>, <span class="string">&quot;args&quot;</span>: <span class="string">&quot;after-used&quot;</span>&#125;],<span class="comment">//不能有声明后未被使用的变量或参数</span></span><br><span class="line"><span class="string">&quot;no-use-before-define&quot;</span>: <span class="number">2</span>,<span class="comment">//未定义前不能使用</span></span><br><span class="line"><span class="string">&quot;no-useless-call&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止不必要的call和apply</span></span><br><span class="line"><span class="string">&quot;no-void&quot;</span>: <span class="number">2</span>,<span class="comment">//禁用void操作符</span></span><br><span class="line"><span class="string">&quot;no-var&quot;</span>: <span class="number">0</span>,<span class="comment">//禁用var，用let和const代替</span></span><br><span class="line"><span class="string">&quot;no-warning-comments&quot;</span>: [<span class="number">1</span>, &#123; <span class="string">&quot;terms&quot;</span>: [<span class="string">&quot;todo&quot;</span>, <span class="string">&quot;fixme&quot;</span>, <span class="string">&quot;xxx&quot;</span>], <span class="string">&quot;location&quot;</span>: <span class="string">&quot;start&quot;</span> &#125;],<span class="comment">//不能有警告备注</span></span><br><span class="line"><span class="string">&quot;no-with&quot;</span>: <span class="number">2</span>,<span class="comment">//禁用with</span></span><br><span class="line"><span class="string">&quot;array-bracket-spacing&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>],<span class="comment">//是否允许非空数组里面有多余的空格</span></span><br><span class="line"><span class="string">&quot;arrow-parens&quot;</span>: <span class="number">0</span>,<span class="comment">//箭头函数用小括号括起来</span></span><br><span class="line"><span class="string">&quot;arrow-spacing&quot;</span>: <span class="number">0</span>,<span class="comment">//=&gt;的前/后括号</span></span><br><span class="line"><span class="string">&quot;accessor-pairs&quot;</span>: <span class="number">0</span>,<span class="comment">//在对象中使用getter/setter</span></span><br><span class="line"><span class="string">&quot;block-scoped-var&quot;</span>: <span class="number">0</span>,<span class="comment">//块语句中使用var</span></span><br><span class="line"><span class="string">&quot;brace-style&quot;</span>: [<span class="number">1</span>, <span class="string">&quot;1tbs&quot;</span>],<span class="comment">//大括号风格</span></span><br><span class="line"><span class="string">&quot;callback-return&quot;</span>: <span class="number">1</span>,<span class="comment">//避免多次调用回调什么的</span></span><br><span class="line"><span class="string">&quot;camelcase&quot;</span>: <span class="number">2</span>,<span class="comment">//强制驼峰法命名</span></span><br><span class="line"><span class="string">&quot;comma-dangle&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>],<span class="comment">//对象字面量项尾不能有逗号</span></span><br><span class="line"><span class="string">&quot;comma-spacing&quot;</span>: <span class="number">0</span>,<span class="comment">//逗号前后的空格</span></span><br><span class="line"><span class="string">&quot;comma-style&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;last&quot;</span>],<span class="comment">//逗号风格，换行时在行首还是行尾</span></span><br><span class="line"><span class="string">&quot;complexity&quot;</span>: [<span class="number">0</span>, <span class="number">11</span>],<span class="comment">//循环复杂度</span></span><br><span class="line"><span class="string">&quot;computed-property-spacing&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;never&quot;</span>],<span class="comment">//是否允许计算后的键名什么的</span></span><br><span class="line"><span class="string">&quot;consistent-return&quot;</span>: <span class="number">0</span>,<span class="comment">//return 后面是否允许省略</span></span><br><span class="line"><span class="string">&quot;consistent-this&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;that&quot;</span>],<span class="comment">//this别名</span></span><br><span class="line"><span class="string">&quot;constructor-super&quot;</span>: <span class="number">0</span>,<span class="comment">//非派生类不能调用super，派生类必须调用super</span></span><br><span class="line"><span class="string">&quot;curly&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;all&quot;</span>],<span class="comment">//必须使用 if()&#123;&#125; 中的&#123;&#125;</span></span><br><span class="line"><span class="string">&quot;default-case&quot;</span>: <span class="number">2</span>,<span class="comment">//switch语句最后必须有default</span></span><br><span class="line"><span class="string">&quot;dot-location&quot;</span>: <span class="number">0</span>,<span class="comment">//对象访问符的位置，换行的时候在行首还是行尾</span></span><br><span class="line"><span class="string">&quot;dot-notation&quot;</span>: [<span class="number">0</span>, &#123; <span class="string">&quot;allowKeywords&quot;</span>: <span class="literal">true</span> &#125;],<span class="comment">//避免不必要的方括号</span></span><br><span class="line"><span class="string">&quot;eol-last&quot;</span>: <span class="number">0</span>,<span class="comment">//文件以单一的换行符结束</span></span><br><span class="line"><span class="string">&quot;eqeqeq&quot;</span>: <span class="number">2</span>,<span class="comment">//必须使用全等</span></span><br><span class="line"><span class="string">&quot;func-names&quot;</span>: <span class="number">0</span>,<span class="comment">//函数表达式必须有名字</span></span><br><span class="line"><span class="string">&quot;func-style&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;declaration&quot;</span>],<span class="comment">//函数风格，规定只能使用函数声明/函数表达式</span></span><br><span class="line"><span class="string">&quot;generator-star-spacing&quot;</span>: <span class="number">0</span>,<span class="comment">//生成器函数*的前后空格</span></span><br><span class="line"><span class="string">&quot;guard-for-in&quot;</span>: <span class="number">0</span>,<span class="comment">//for in循环要用if语句过滤</span></span><br><span class="line"><span class="string">&quot;handle-callback-err&quot;</span>: <span class="number">0</span>,<span class="comment">//nodejs 处理错误</span></span><br><span class="line"><span class="string">&quot;id-length&quot;</span>: <span class="number">0</span>,<span class="comment">//变量名长度</span></span><br><span class="line"><span class="string">&quot;indent&quot;</span>: [<span class="number">2</span>, <span class="number">4</span>],<span class="comment">//缩进风格</span></span><br><span class="line"><span class="string">&quot;init-declarations&quot;</span>: <span class="number">0</span>,<span class="comment">//声明时必须赋初值</span></span><br><span class="line"><span class="string">&quot;key-spacing&quot;</span>: [<span class="number">0</span>, &#123; <span class="string">&quot;beforeColon&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;afterColon&quot;</span>: <span class="literal">true</span> &#125;],<span class="comment">//对象字面量中冒号的前后空格</span></span><br><span class="line"><span class="string">&quot;lines-around-comment&quot;</span>: <span class="number">0</span>,<span class="comment">//行前/行后备注</span></span><br><span class="line"><span class="string">&quot;max-depth&quot;</span>: [<span class="number">0</span>, <span class="number">4</span>],<span class="comment">//嵌套块深度</span></span><br><span class="line"><span class="string">&quot;max-len&quot;</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">4</span>],<span class="comment">//字符串最大长度</span></span><br><span class="line"><span class="string">&quot;max-nested-callbacks&quot;</span>: [<span class="number">0</span>, <span class="number">2</span>],<span class="comment">//回调嵌套深度</span></span><br><span class="line"><span class="string">&quot;max-params&quot;</span>: [<span class="number">0</span>, <span class="number">3</span>],<span class="comment">//函数最多只能有3个参数</span></span><br><span class="line"><span class="string">&quot;max-statements&quot;</span>: [<span class="number">0</span>, <span class="number">10</span>],<span class="comment">//函数内最多有几个声明</span></span><br><span class="line"><span class="string">&quot;new-cap&quot;</span>: <span class="number">2</span>,<span class="comment">//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span><br><span class="line"><span class="string">&quot;new-parens&quot;</span>: <span class="number">2</span>,<span class="comment">//new时必须加小括号</span></span><br><span class="line"><span class="string">&quot;newline-after-var&quot;</span>: <span class="number">2</span>,<span class="comment">//变量声明后是否需要空一行</span></span><br><span class="line"><span class="string">&quot;object-curly-spacing&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;never&quot;</span>],<span class="comment">//大括号内是否允许不必要的空格</span></span><br><span class="line"><span class="string">&quot;object-shorthand&quot;</span>: <span class="number">0</span>,<span class="comment">//强制对象字面量缩写语法</span></span><br><span class="line"><span class="string">&quot;one-var&quot;</span>: <span class="number">1</span>,<span class="comment">//连续声明</span></span><br><span class="line"><span class="string">&quot;operator-assignment&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//赋值运算符 += -=什么的</span></span><br><span class="line"><span class="string">&quot;operator-linebreak&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;after&quot;</span>],<span class="comment">//换行时运算符在行尾还是行首</span></span><br><span class="line"><span class="string">&quot;padded-blocks&quot;</span>: <span class="number">0</span>,<span class="comment">//块语句内行首行尾是否要空行</span></span><br><span class="line"><span class="string">&quot;prefer-const&quot;</span>: <span class="number">0</span>,<span class="comment">//首选const</span></span><br><span class="line"><span class="string">&quot;prefer-spread&quot;</span>: <span class="number">0</span>,<span class="comment">//首选展开运算</span></span><br><span class="line"><span class="string">&quot;prefer-reflect&quot;</span>: <span class="number">0</span>,<span class="comment">//首选Reflect的方法</span></span><br><span class="line"><span class="string">&quot;quotes&quot;</span>: [<span class="number">1</span>, <span class="string">&quot;single&quot;</span>],<span class="comment">//引号类型 `` &quot;&quot; &#x27;&#x27;</span></span><br><span class="line"><span class="string">&quot;quote-props&quot;</span>:[<span class="number">2</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//对象字面量中的属性名是否强制双引号</span></span><br><span class="line"><span class="string">&quot;radix&quot;</span>: <span class="number">2</span>,<span class="comment">//parseInt必须指定第二个参数</span></span><br><span class="line"><span class="string">&quot;id-match&quot;</span>: <span class="number">0</span>,<span class="comment">//命名检测</span></span><br><span class="line"><span class="string">&quot;require-yield&quot;</span>: <span class="number">0</span>,<span class="comment">//生成器函数必须有yield</span></span><br><span class="line"><span class="string">&quot;semi&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//语句强制分号结尾</span></span><br><span class="line"><span class="string">&quot;semi-spacing&quot;</span>: [<span class="number">0</span>, &#123;<span class="string">&quot;before&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;after&quot;</span>: <span class="literal">true</span>&#125;],<span class="comment">//分号前后空格</span></span><br><span class="line"><span class="string">&quot;sort-vars&quot;</span>: <span class="number">0</span>,<span class="comment">//变量声明时排序</span></span><br><span class="line"><span class="string">&quot;space-after-keywords&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//关键字后面是否要空一格</span></span><br><span class="line"><span class="string">&quot;space-before-blocks&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//不以新行开始的块&#123;前面要不要有空格</span></span><br><span class="line"><span class="string">&quot;space-before-function-paren&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;always&quot;</span>],<span class="comment">//函数定义时括号前面要不要有空格</span></span><br><span class="line"><span class="string">&quot;space-in-parens&quot;</span>: [<span class="number">0</span>, <span class="string">&quot;never&quot;</span>],<span class="comment">//小括号里面要不要有空格</span></span><br><span class="line"><span class="string">&quot;space-infix-ops&quot;</span>: <span class="number">0</span>,<span class="comment">//中缀操作符周围要不要有空格</span></span><br><span class="line"><span class="string">&quot;space-return-throw-case&quot;</span>: <span class="number">2</span>,<span class="comment">//return throw case后面要不要加空格</span></span><br><span class="line"><span class="string">&quot;space-unary-ops&quot;</span>: [<span class="number">0</span>, &#123; <span class="string">&quot;words&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;nonwords&quot;</span>: <span class="literal">false</span> &#125;],<span class="comment">//一元运算符的前/后要不要加空格</span></span><br><span class="line"><span class="string">&quot;spaced-comment&quot;</span>: <span class="number">0</span>,<span class="comment">//注释风格要不要有空格什么的</span></span><br><span class="line"><span class="string">&quot;strict&quot;</span>: <span class="number">2</span>,<span class="comment">//使用严格模式</span></span><br><span class="line"><span class="string">&quot;use-isnan&quot;</span>: <span class="number">2</span>,<span class="comment">//禁止比较时使用NaN，只能用isNaN()</span></span><br><span class="line"><span class="string">&quot;valid-jsdoc&quot;</span>: <span class="number">0</span>,<span class="comment">//jsdoc规则</span></span><br><span class="line"><span class="string">&quot;valid-typeof&quot;</span>: <span class="number">2</span>,<span class="comment">//必须使用合法的typeof的值</span></span><br><span class="line"><span class="string">&quot;vars-on-top&quot;</span>: <span class="number">2</span>,<span class="comment">//var必须放在作用域顶部</span></span><br><span class="line"><span class="string">&quot;wrap-iife&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;inside&quot;</span>],<span class="comment">//立即执行函数表达式的小括号风格</span></span><br><span class="line"><span class="string">&quot;wrap-regex&quot;</span>: <span class="number">0</span>,<span class="comment">//正则表达式字面量用小括号包起来</span></span><br><span class="line"><span class="string">&quot;yoda&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>]<span class="comment">//禁止尤达条件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>支持React</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &quot;off&quot; or 0 - turn the rule off</span></span><br><span class="line"><span class="comment">// &quot;warn&quot; or 1 - turn the rule on as a warning (doesn’t affect exit code)</span></span><br><span class="line"><span class="comment">// &quot;error&quot; or 2 - turn the rule on as an error (exit code is 1 when triggered)</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;browser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;commonjs&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;es6&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;node&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;jest&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;jquery&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;parser&quot;</span>: <span class="string">&quot;Espree&quot;</span>,</span><br><span class="line">    <span class="string">&quot;globals&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;__dirname&quot;</span>: <span class="string">&quot;__dirname&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;extends&quot;</span>: <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">    <span class="string">&quot;parserOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;ecmaVersion&quot;</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="string">&quot;ecmaFeatures&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;experimentalObjectRestSpread&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;jsx&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;globalReturn&quot;</span>: <span class="literal">true</span> <span class="comment">//allow return statements in the global scope</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;sourceType&quot;</span>: <span class="string">&quot;module&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;react&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;rules&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;react/jsx-uses-react&quot;</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="string">&quot;react/jsx-uses-vars&quot;</span>: [<span class="string">&quot;error&quot;</span>],</span><br><span class="line">        <span class="string">&quot;indent&quot;</span>: [</span><br><span class="line">            <span class="number">2</span>, <span class="number">4</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;linebreak-style&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="string">&quot;windows&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;quotes&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            <span class="string">&quot;single&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;semi&quot;</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">        <span class="string">&quot;eqeqeq&quot;</span>: <span class="string">&quot;error&quot;</span>, <span class="comment">// require the use of === and !==</span></span><br><span class="line">        <span class="string">&quot;no-alert&quot;</span>: <span class="string">&quot;error&quot;</span>, <span class="comment">//require the use of === and !==</span></span><br><span class="line">        <span class="string">&quot;no-multi-spaces&quot;</span>: <span class="string">&quot;error&quot;</span>, <span class="comment">//disallow multiple spaces</span></span><br><span class="line">        <span class="string">&quot;no-redeclare&quot;</span>: <span class="string">&quot;error&quot;</span>, <span class="comment">//disallow variable redeclaration</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a name="YlGhb"></a></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><hr><p><a href="https://www.cnblogs.com/lsgxeva/p/7994474.html">https://www.cnblogs.com/lsgxeva/p/7994474.html</a> *<br /><a href="https://www.jianshu.com/p/ad1e46faaea2">https://www.jianshu.com/p/ad1e46faaea2</a><br /><a href="https://juejin.cn/post/7012798266089668645">https://juejin.cn/post/7012798266089668645</a><br /><a href="https://cloud.tencent.com/developer/section/1135569">https://cloud.tencent.com/developer/section/1135569</a><br /><a href="https://blog.csdn.net/jjknight/article/details/104498720">https://blog.csdn.net/jjknight/article/details/104498720</a>   如何在vue中关闭eslint工具</p>]]></content>
      
      
      <categories>
          
          <category> 配置工具 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
